{
  "title": "Schema",
  "type": "object",
  "properties": {
    "description": {
      "title": "Description",
      "description": "Description of what this Device does",
      "type": "string"
    },
    "macros": {
      "title": "Macros",
      "description": "Macros needed to make an instance of this",
      "default": [],
      "type": "array",
      "items": {
        "anyOf": [
          {
            "$ref": "#/definitions/FloatMacro"
          },
          {
            "$ref": "#/definitions/StringMacro"
          },
          {
            "$ref": "#/definitions/IntMacro"
          }
        ]
      }
    },
    "template": {
      "title": "Template",
      "description": "Template file that should be loaded by the IOC",
      "type": "string"
    },
    "startup": {
      "title": "Startup",
      "description": "Lines to insert into the startup script of IOC",
      "default": "",
      "type": "string"
    },
    "screens": {
      "title": "Screens",
      "description": "List of paths to associated screens",
      "default": [],
      "type": "array",
      "items": {
        "$ref": "#/definitions/File"
      }
    },
    "includes": {
      "title": "Includes",
      "description": "YAML files to include in the definitions",
      "default": [],
      "type": "array",
      "items": {
        "$ref": "#/definitions/File"
      }
    },
    "local": {
      "title": "Local",
      "description": "YAML file that overrides this for local changes",
      "type": "string"
    },
    "producer": {
      "title": "Producer",
      "description": "The Producer class to make Records and the Device",
      "allOf": [
        {
          "$ref": "#/definitions/AsynProducer"
        }
      ]
    },
    "formatter": {
      "title": "Formatter",
      "description": "The Formatter class to format the output",
      "anyOf": [
        {
          "allOf": [
            {
              "$ref": "#/definitions/APSFormatter"
            }
          ]
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/DLSFormatter"
            }
          ]
        }
      ]
    },
    "components": {
      "title": "Components",
      "description": "The Components to pass to the Producer",
      "type": "array",
      "items": {
        "anyOf": [
          {
            "$ref": "#/definitions/ComponentGroup"
          },
          {
            "$ref": "#/definitions/AsynFloat64"
          },
          {
            "$ref": "#/definitions/AsynString"
          }
        ]
      }
    }
  },
  "required": [
    "description",
    "template",
    "producer",
    "formatter",
    "components"
  ],
  "definitions": {
    "FloatMacro": {
      "title": "FloatMacro",
      "description": "BaseModel that adds a type parameter from class name.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "const": "FloatMacro",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "The name of the Macro that will be passed when instantiated",
          "type": "string"
        },
        "description": {
          "title": "Description",
          "description": "Description of what the Macro will be used for",
          "type": "string"
        },
        "value": {
          "title": "Value",
          "description": "The default value of the parameter, None means required",
          "type": "number"
        }
      },
      "required": [
        "name",
        "description"
      ]
    },
    "StringMacro": {
      "title": "StringMacro",
      "description": "BaseModel that adds a type parameter from class name.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "const": "StringMacro",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "The name of the Macro that will be passed when instantiated",
          "type": "string"
        },
        "description": {
          "title": "Description",
          "description": "Description of what the Macro will be used for",
          "type": "string"
        },
        "value": {
          "title": "Value",
          "description": "The default value of the parameter, None means required",
          "type": "string"
        }
      },
      "required": [
        "name",
        "description"
      ]
    },
    "IntMacro": {
      "title": "IntMacro",
      "description": "BaseModel that adds a type parameter from class name.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "const": "IntMacro",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "The name of the Macro that will be passed when instantiated",
          "type": "string"
        },
        "description": {
          "title": "Description",
          "description": "Description of what the Macro will be used for",
          "type": "string"
        },
        "value": {
          "title": "Value",
          "description": "The default value of the parameter, None means required",
          "type": "integer"
        }
      },
      "required": [
        "name",
        "description"
      ]
    },
    "File": {
      "title": "File",
      "type": "object",
      "properties": {
        "path": {
          "title": "Path",
          "description": "Path to the file, can include macros",
          "type": "string"
        },
        "macros": {
          "title": "Macros",
          "description": "Extra macros to pass along with the macros from this file",
          "default": {},
          "type": "object"
        }
      },
      "required": [
        "path"
      ]
    },
    "AsynProducer": {
      "title": "AsynProducer",
      "description": "BaseModel that adds a type parameter from class name.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "const": "AsynProducer",
          "type": "string"
        },
        "prefix": {
          "title": "Prefix",
          "description": "The prefix for record names created by the template file",
          "type": "string"
        },
        "asyn_port": {
          "title": "Asyn Port",
          "description": "The asyn port name",
          "type": "string"
        },
        "address": {
          "title": "Address",
          "description": "The asyn address",
          "type": "string"
        },
        "timeout": {
          "title": "Timeout",
          "description": "The timeout for the asyn port",
          "type": "string"
        }
      },
      "required": [
        "prefix",
        "asyn_port",
        "address",
        "timeout"
      ]
    },
    "APSFormatter": {
      "title": "APSFormatter",
      "description": "BaseModel that adds a type parameter from class name.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "const": "APSFormatter",
          "type": "string"
        }
      }
    },
    "DLSFormatter": {
      "title": "DLSFormatter",
      "description": "BaseModel that adds a type parameter from class name.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "const": "DLSFormatter",
          "type": "string"
        }
      }
    },
    "AsynFloat64": {
      "title": "AsynFloat64",
      "description": "Asyn Float64 Parameter and records",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "const": "AsynFloat64",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "CamelCase name to uniquely identify this component",
          "pattern": "([A-Z][a-z0-9]*)*$",
          "type": "string"
        },
        "description": {
          "title": "Description",
          "description": "Description of what this Parameter is for",
          "type": "string"
        },
        "role": {
          "title": "Role",
          "description": "An enumeration.",
          "default": "Setting Pair",
          "enum": [
            "Setting",
            "Setting Pair",
            "Action",
            "Readback",
            "Action + Readback"
          ],
          "type": "string"
        },
        "autosave": {
          "title": "Autosave",
          "description": "Record fields that should be autosaved",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "read_record_suffix": {
          "title": "Read Record Suffix",
          "description": "The read record suffix, if not given then use $(name)_RBV",
          "type": "string"
        },
        "read_record_scan": {
          "title": "Read Record Scan",
          "description": "SCAN rate of the read record",
          "default": "I/O Intr",
          "enum": [
            "Passive",
            "Event",
            "I/O Intr",
            "10 second",
            "5 second",
            "2 second",
            "1 second",
            ".5 second",
            ".2 second",
            ".1 second"
          ],
          "type": "string"
        },
        "write_record_suffix": {
          "title": "Write Record Suffix",
          "description": "The write record suffix, if not given then use $(name)",
          "type": "string"
        },
        "read_widget": {
          "title": "Read Widget",
          "description": "Override the widget to use for read-only channels",
          "default": "Text Update",
          "enum": [
            "Text Input",
            "Text Update",
            "Multiline Text Update",
            "LED",
            "Combo",
            "Checkbox",
            "Table",
            "Plot",
            "Meter",
            "Button"
          ],
          "type": "string"
        },
        "write_widget": {
          "title": "Write Widget",
          "description": "Override the widget to use for writeable channels",
          "default": "Text Input",
          "enum": [
            "Text Input",
            "Text Update",
            "Multiline Text Update",
            "LED",
            "Combo",
            "Checkbox",
            "Table",
            "Plot",
            "Meter",
            "Button"
          ],
          "type": "string"
        },
        "display_form": {
          "title": "Display Form",
          "description": "Display form for numeric/array fields",
          "enum": [
            "Default",
            "String",
            "Binary",
            "Decimal",
            "Hexadecimal",
            "Exponential",
            "Engineering"
          ],
          "type": "string"
        },
        "initial": {
          "title": "Initial",
          "description": "The initial value of the parameter",
          "type": "number"
        },
        "precision": {
          "title": "Precision",
          "description": "Record precision",
          "default": 3,
          "type": "integer"
        },
        "units": {
          "title": "Units",
          "description": "Record engineering units",
          "default": "",
          "type": "string"
        }
      },
      "required": [
        "name",
        "description"
      ]
    },
    "AsynString": {
      "title": "AsynString",
      "description": "Asyn String Parameter and records",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "const": "AsynString",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "CamelCase name to uniquely identify this component",
          "pattern": "([A-Z][a-z0-9]*)*$",
          "type": "string"
        },
        "description": {
          "title": "Description",
          "description": "Description of what this Parameter is for",
          "type": "string"
        },
        "role": {
          "title": "Role",
          "description": "An enumeration.",
          "default": "Setting Pair",
          "enum": [
            "Setting",
            "Setting Pair",
            "Action",
            "Readback",
            "Action + Readback"
          ],
          "type": "string"
        },
        "autosave": {
          "title": "Autosave",
          "description": "Record fields that should be autosaved",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "read_record_suffix": {
          "title": "Read Record Suffix",
          "description": "The read record suffix, if not given then use $(name)_RBV",
          "type": "string"
        },
        "read_record_scan": {
          "title": "Read Record Scan",
          "description": "SCAN rate of the read record",
          "default": "I/O Intr",
          "enum": [
            "Passive",
            "Event",
            "I/O Intr",
            "10 second",
            "5 second",
            "2 second",
            "1 second",
            ".5 second",
            ".2 second",
            ".1 second"
          ],
          "type": "string"
        },
        "write_record_suffix": {
          "title": "Write Record Suffix",
          "description": "The write record suffix, if not given then use $(name)",
          "type": "string"
        },
        "read_widget": {
          "title": "Read Widget",
          "description": "Override the widget to use for read-only channels",
          "default": "Text Update",
          "enum": [
            "Text Input",
            "Text Update",
            "Multiline Text Update",
            "LED",
            "Combo",
            "Checkbox",
            "Table",
            "Plot",
            "Meter",
            "Button"
          ],
          "type": "string"
        },
        "write_widget": {
          "title": "Write Widget",
          "description": "Override the widget to use for writeable channels",
          "default": "Text Input",
          "enum": [
            "Text Input",
            "Text Update",
            "Multiline Text Update",
            "LED",
            "Combo",
            "Checkbox",
            "Table",
            "Plot",
            "Meter",
            "Button"
          ],
          "type": "string"
        },
        "display_form": {
          "title": "Display Form",
          "description": "Display form for numeric/array fields",
          "enum": [
            "Default",
            "String",
            "Binary",
            "Decimal",
            "Hexadecimal",
            "Exponential",
            "Engineering"
          ],
          "type": "string"
        },
        "initial": {
          "title": "Initial",
          "description": "The initial value of the parameter",
          "type": "string"
        }
      },
      "required": [
        "name",
        "description"
      ]
    },
    "ComponentGroup": {
      "title": "ComponentGroup",
      "description": "Group that can contain multiple parameters or other Groups.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "const": "ComponentGroup",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "CamelCase name to uniquely identify this component",
          "pattern": "([A-Z][a-z0-9]*)*$",
          "type": "string"
        },
        "children": {
          "title": "Children",
          "description": "Child Parameters or Groups",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/ComponentGroup"
              },
              {
                "$ref": "#/definitions/AsynFloat64"
              },
              {
                "$ref": "#/definitions/AsynString"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "children"
      ]
    }
  }
}
