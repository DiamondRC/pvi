{
  "title": "Schema auto-generated by pvi-0+untagged.gec59b5e.dirty",
  "type": "object",
  "properties": {
    "local": {
      "title": "Local",
      "description": "YAML file that overrides this for local changes",
      "type": "string"
    },
    "producer": {
      "title": "Producer",
      "description": "The Producer class to make Records and the Device",
      "allOf": [
        {
          "$ref": "#/definitions/AsynProducer"
        }
      ]
    },
    "formatter": {
      "title": "Formatter",
      "description": "The Formatter class to format the output",
      "anyOf": [
        {
          "$ref": "#/definitions/APSFormatter"
        },
        {
          "$ref": "#/definitions/DLSFormatter"
        }
      ]
    },
    "parent": {
      "title": "Parent",
      "description": "Parent that this Device inherits from",
      "type": "string"
    },
    "components": {
      "title": "Components",
      "description": "The Components to pass to the Producer",
      "type": "array",
      "items": {
        "anyOf": [
          {
            "$ref": "#/definitions/ComponentGroup"
          },
          {
            "$ref": "#/definitions/AsynBinary"
          },
          {
            "$ref": "#/definitions/AsynBusy"
          },
          {
            "$ref": "#/definitions/AsynFloat64"
          },
          {
            "$ref": "#/definitions/AsynInt32"
          },
          {
            "$ref": "#/definitions/AsynLong"
          },
          {
            "$ref": "#/definitions/AsynMultiBitBinary"
          },
          {
            "$ref": "#/definitions/AsynString"
          },
          {
            "$ref": "#/definitions/AsynWaveform"
          }
        ]
      }
    }
  },
  "required": [
    "producer",
    "formatter",
    "parent",
    "components"
  ],
  "additionalProperties": false,
  "definitions": {
    "AsynProducer": {
      "title": "AsynProducer",
      "description": "BaseModel that adds a type parameter from class name.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "const": "AsynProducer",
          "type": "string"
        },
        "prefix": {
          "title": "Prefix",
          "description": "The prefix for record names created by the template file",
          "type": "string"
        },
        "asyn_port": {
          "title": "Asyn Port",
          "description": "The asyn port name",
          "type": "string"
        },
        "address": {
          "title": "Address",
          "description": "The asyn address",
          "type": "string"
        },
        "timeout": {
          "title": "Timeout",
          "description": "The timeout for the asyn port",
          "type": "string"
        }
      },
      "required": [
        "prefix",
        "asyn_port",
        "address",
        "timeout"
      ]
    },
    "APSFormatter": {
      "title": "APSFormatter",
      "description": "BaseModel that adds a type parameter from class name.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "const": "APSFormatter",
          "type": "string"
        }
      }
    },
    "DLSFormatter": {
      "title": "DLSFormatter",
      "description": "BaseModel that adds a type parameter from class name.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "const": "DLSFormatter",
          "type": "string"
        }
      }
    },
    "Layout": {
      "title": "Layout",
      "description": "An enumeration.",
      "enum": [
        "SCREEN",
        "BOX",
        "PLOT",
        "ROW",
        "TABLE"
      ]
    },
    "ParameterRole": {
      "title": "ParameterRole",
      "description": "What role does this parameter play within the device. One of:\n\n- Readback: a parameter of the device that can be read from.\n  E.g. chipTemperature on a detector, or isHomed for a motor\n- Action: a parameter of the device that can be written to, but there\n  is no current value.\n  E.g. reboot on a detector, or overwriteCurrentPosition for a motor\n- Setting: a parameter of the device that can be written to, the\n  current value can be read from, and should be saved/loaded when\n  switching between configurations of the device.\n  E.g. acquireTime on a detector, or velocity of a motor\n- Transient: a parameter of the device that can be written to and\n  read from, but should not be saved/loaded when switching between\n  configurations of the device.\n  E.g. arrayCounter on a detector, or position of a motor",
      "enum": [
        "Readback",
        "Action",
        "Setting",
        "Transient"
      ],
      "type": "string"
    },
    "DisplayForm": {
      "title": "DisplayForm",
      "description": "An enumeration.",
      "enum": [
        "DEFAULT",
        "STRING",
        "BINARY",
        "DECIMAL",
        "HEX",
        "EXPONENTIAL",
        "ENGINEERING"
      ]
    },
    "Widget": {
      "title": "Widget",
      "description": "An enumeration.",
      "enum": [
        "TEXTINPUT",
        "TEXTUPDATE",
        "MULTILINETEXTUPDATE",
        "LED",
        "COMBO",
        "CHECKBOX",
        "BAR",
        "BUTTON",
        "PLOTX",
        "PLOTY"
      ]
    },
    "BinaryAll": {
      "title": "BinaryAll",
      "type": "object",
      "properties": {
        "DISA": {
          "title": "Disa",
          "description": "DISA",
          "type": "string"
        },
        "DISS": {
          "title": "Diss",
          "description": "DISS",
          "type": "string"
        },
        "DISV": {
          "title": "Disv",
          "description": "DISV",
          "type": "string"
        },
        "EVNT": {
          "title": "Evnt",
          "description": "EVNT",
          "type": "string"
        },
        "FLNK": {
          "title": "Flnk",
          "description": "FLNK",
          "type": "string"
        },
        "LCNT": {
          "title": "Lcnt",
          "description": "LCNT",
          "type": "string"
        },
        "LSET": {
          "title": "Lset",
          "description": "LSET",
          "type": "string"
        },
        "PACT": {
          "title": "Pact",
          "description": "PACT",
          "type": "string"
        },
        "PHAS": {
          "title": "Phas",
          "description": "PHAS",
          "type": "string"
        },
        "PINI": {
          "title": "Pini",
          "description": "PINI",
          "type": "string"
        },
        "PRIO": {
          "title": "Prio",
          "description": "PRIO",
          "type": "string"
        },
        "PROC": {
          "title": "Proc",
          "description": "PROC",
          "type": "string"
        },
        "SCAN": {
          "title": "Scan",
          "description": "SCAN",
          "type": "string"
        },
        "SDIS": {
          "title": "Sdis",
          "description": "SDIS",
          "type": "string"
        },
        "COSV": {
          "title": "Cosv",
          "description": "COSV",
          "type": "string"
        },
        "LALM": {
          "title": "Lalm",
          "description": "LALM",
          "type": "string"
        },
        "MASK": {
          "title": "Mask",
          "description": "MASK",
          "type": "string"
        },
        "MLST": {
          "title": "Mlst",
          "description": "MLST",
          "type": "string"
        },
        "ONAM": {
          "title": "Onam",
          "description": "ONAM",
          "type": "string"
        },
        "ORAW": {
          "title": "Oraw",
          "description": "ORAW",
          "type": "string"
        },
        "OSV": {
          "title": "Osv",
          "description": "OSV",
          "type": "string"
        },
        "RVAL": {
          "title": "Rval",
          "description": "RVAL",
          "type": "string"
        },
        "SIML": {
          "title": "Siml",
          "description": "SIML",
          "type": "string"
        },
        "SIMM": {
          "title": "Simm",
          "description": "SIMM",
          "type": "string"
        },
        "SIMS": {
          "title": "Sims",
          "description": "SIMS",
          "type": "string"
        },
        "SIOL": {
          "title": "Siol",
          "description": "SIOL",
          "type": "string"
        },
        "ZNAM": {
          "title": "Znam",
          "description": "ZNAM",
          "type": "string"
        },
        "ZSV": {
          "title": "Zsv",
          "description": "ZSV",
          "type": "string"
        },
        "DOL": {
          "title": "Dol",
          "description": "DOL",
          "type": "string"
        },
        "HIGH": {
          "title": "High",
          "description": "HIGH",
          "type": "string"
        },
        "IVOA": {
          "title": "Ivoa",
          "description": "IVOA",
          "type": "string"
        },
        "IVOV": {
          "title": "Ivov",
          "description": "IVOV",
          "type": "string"
        },
        "OMSL": {
          "title": "Omsl",
          "description": "OMSL",
          "type": "string"
        },
        "ORBV": {
          "title": "Orbv",
          "description": "ORBV",
          "type": "string"
        },
        "RBV": {
          "title": "Rbv",
          "description": "RBV",
          "type": "string"
        },
        "RPVT": {
          "title": "Rpvt",
          "description": "RPVT",
          "type": "string"
        },
        "WDPT": {
          "title": "Wdpt",
          "description": "WDPT",
          "type": "string"
        },
        "SVAL": {
          "title": "Sval",
          "description": "SVAL",
          "type": "string"
        }
      }
    },
    "AsynBinary": {
      "title": "AsynBinary",
      "description": "Asyn Float32 Parameter and records",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "const": "AsynBinary",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "CamelCase name to uniquely identify this component",
          "pattern": "([A-Z][a-z0-9]*)*$",
          "type": "string"
        },
        "label": {
          "title": "Label",
          "description": "The GUI Label for this, default is name converted to Title Case",
          "type": "string"
        },
        "description": {
          "title": "Description",
          "description": "Description of what this Parameter is for",
          "type": "string"
        },
        "index_name": {
          "title": "Index Name",
          "description": "Override name of index variable in source code (defaults to name)",
          "pattern": "([A-Z][a-z0-9]*)*$",
          "type": "string"
        },
        "drv_info": {
          "title": "Drv Info",
          "description": "Info string for drvUserCreate for dynamically created parameters",
          "pattern": "^\\S{1,40}$",
          "type": "string"
        },
        "role": {
          "description": "What role does this parameter play within the device. One of:\n\n    - Readback: a parameter of the device that can be read from.\n      E.g. chipTemperature on a detector, or isHomed for a motor\n    - Action: a parameter of the device that can be written to, but there\n      is no current value.\n      E.g. reboot on a detector, or overwriteCurrentPosition for a motor\n    - Setting: a parameter of the device that can be written to, the\n      current value can be read from, and should be saved/loaded when\n      switching between configurations of the device.\n      E.g. acquireTime on a detector, or velocity of a motor\n    - Transient: a parameter of the device that can be written to and\n      read from, but should not be saved/loaded when switching between\n      configurations of the device.\n      E.g. arrayCounter on a detector, or position of a motor\n    ",
          "default": "Setting",
          "allOf": [
            {
              "$ref": "#/definitions/ParameterRole"
            }
          ]
        },
        "demand_auto_updates": {
          "title": "Demand Auto Updates",
          "description": "Should demand update when readback changes?",
          "default": false,
          "type": "boolean"
        },
        "autosave": {
          "title": "Autosave",
          "description": "Record fields that should be autosaved",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "read_record_suffix": {
          "title": "Read Record Suffix",
          "description": "The read record suffix, if not given then use $(name)_RBV",
          "type": "string"
        },
        "write_record_suffix": {
          "title": "Write Record Suffix",
          "description": "The write record suffix, if not given then use $(name)",
          "type": "string"
        },
        "display_form": {
          "description": "Display form for numeric/array fields",
          "allOf": [
            {
              "$ref": "#/definitions/DisplayForm"
            }
          ]
        },
        "initial": {
          "title": "Initial",
          "description": "The initial value of the parameter",
          "anyOf": [
            {
              "type": "integer",
              "minimum": 0,
              "maximum": 1
            },
            {
              "type": "string",
              "pattern": "(\\$\\(\\w+=([0-1])\\))"
            }
          ]
        },
        "read_widget": {
          "description": "Override the widget to use these sort of channels",
          "default": "LED",
          "allOf": [
            {
              "$ref": "#/definitions/Widget"
            }
          ]
        },
        "write_widget": {
          "description": "Override the widget to use these sort of channels",
          "default": "CHECKBOX",
          "allOf": [
            {
              "$ref": "#/definitions/Widget"
            }
          ]
        },
        "record_fields": {
          "title": "Record Fields",
          "description": "Binary record fields",
          "default": {
            "DISA": null,
            "DISS": null,
            "DISV": null,
            "EVNT": null,
            "FLNK": null,
            "LCNT": null,
            "LSET": null,
            "PACT": null,
            "PHAS": null,
            "PINI": null,
            "PRIO": null,
            "PROC": null,
            "SCAN": null,
            "SDIS": null,
            "COSV": null,
            "LALM": null,
            "MASK": null,
            "MLST": null,
            "ONAM": null,
            "ORAW": null,
            "OSV": null,
            "RVAL": null,
            "SIML": null,
            "SIMM": null,
            "SIMS": null,
            "SIOL": null,
            "ZNAM": null,
            "ZSV": null,
            "DOL": null,
            "HIGH": null,
            "IVOA": null,
            "IVOV": null,
            "OMSL": null,
            "ORBV": null,
            "RBV": null,
            "RPVT": null,
            "WDPT": null,
            "SVAL": null
          },
          "allOf": [
            {
              "$ref": "#/definitions/BinaryAll"
            }
          ]
        }
      },
      "required": [
        "name",
        "description"
      ]
    },
    "AsynBusy": {
      "title": "AsynBusy",
      "description": "Asyn busy Parameter and records",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "const": "AsynBusy",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "CamelCase name to uniquely identify this component",
          "pattern": "([A-Z][a-z0-9]*)*$",
          "type": "string"
        },
        "label": {
          "title": "Label",
          "description": "The GUI Label for this, default is name converted to Title Case",
          "type": "string"
        },
        "description": {
          "title": "Description",
          "description": "Description of what this Parameter is for",
          "type": "string"
        },
        "index_name": {
          "title": "Index Name",
          "description": "Override name of index variable in source code (defaults to name)",
          "pattern": "([A-Z][a-z0-9]*)*$",
          "type": "string"
        },
        "drv_info": {
          "title": "Drv Info",
          "description": "Info string for drvUserCreate for dynamically created parameters",
          "pattern": "^\\S{1,40}$",
          "type": "string"
        },
        "role": {
          "description": "What role does this parameter play within the device. One of:\n\n    - Readback: a parameter of the device that can be read from.\n      E.g. chipTemperature on a detector, or isHomed for a motor\n    - Action: a parameter of the device that can be written to, but there\n      is no current value.\n      E.g. reboot on a detector, or overwriteCurrentPosition for a motor\n    - Setting: a parameter of the device that can be written to, the\n      current value can be read from, and should be saved/loaded when\n      switching between configurations of the device.\n      E.g. acquireTime on a detector, or velocity of a motor\n    - Transient: a parameter of the device that can be written to and\n      read from, but should not be saved/loaded when switching between\n      configurations of the device.\n      E.g. arrayCounter on a detector, or position of a motor\n    ",
          "default": "Setting",
          "allOf": [
            {
              "$ref": "#/definitions/ParameterRole"
            }
          ]
        },
        "demand_auto_updates": {
          "title": "Demand Auto Updates",
          "description": "Should demand update when readback changes?",
          "default": false,
          "type": "boolean"
        },
        "autosave": {
          "title": "Autosave",
          "description": "Record fields that should be autosaved",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "read_record_suffix": {
          "title": "Read Record Suffix",
          "description": "The read record suffix, if not given then use $(name)_RBV",
          "type": "string"
        },
        "write_record_suffix": {
          "title": "Write Record Suffix",
          "description": "The write record suffix, if not given then use $(name)",
          "type": "string"
        },
        "display_form": {
          "description": "Display form for numeric/array fields",
          "allOf": [
            {
              "$ref": "#/definitions/DisplayForm"
            }
          ]
        },
        "initial": {
          "title": "Initial",
          "description": "The initial value of the parameter",
          "anyOf": [
            {
              "type": "integer",
              "minimum": 0,
              "maximum": 1
            },
            {
              "type": "string",
              "pattern": "(\\$\\(\\w+=([0-1])\\))"
            }
          ]
        },
        "read_widget": {
          "description": "Override the widget to use these sort of channels",
          "default": "LED",
          "allOf": [
            {
              "$ref": "#/definitions/Widget"
            }
          ]
        },
        "write_widget": {
          "description": "Override the widget to use these sort of channels",
          "default": "BUTTON",
          "allOf": [
            {
              "$ref": "#/definitions/Widget"
            }
          ]
        },
        "record_fields": {
          "title": "Record Fields",
          "description": "Binary record fields",
          "default": {
            "DISA": null,
            "DISS": null,
            "DISV": null,
            "EVNT": null,
            "FLNK": null,
            "LCNT": null,
            "LSET": null,
            "PACT": null,
            "PHAS": null,
            "PINI": null,
            "PRIO": null,
            "PROC": null,
            "SCAN": null,
            "SDIS": null,
            "COSV": null,
            "LALM": null,
            "MASK": null,
            "MLST": null,
            "ONAM": null,
            "ORAW": null,
            "OSV": null,
            "RVAL": null,
            "SIML": null,
            "SIMM": null,
            "SIMS": null,
            "SIOL": null,
            "ZNAM": null,
            "ZSV": null,
            "DOL": null,
            "HIGH": null,
            "IVOA": null,
            "IVOV": null,
            "OMSL": null,
            "ORBV": null,
            "RBV": null,
            "RPVT": null,
            "WDPT": null,
            "SVAL": null
          },
          "allOf": [
            {
              "$ref": "#/definitions/BinaryAll"
            }
          ]
        }
      },
      "required": [
        "name",
        "description"
      ]
    },
    "AnalogueAll": {
      "title": "AnalogueAll",
      "type": "object",
      "properties": {
        "DISA": {
          "title": "Disa",
          "description": "DISA",
          "type": "string"
        },
        "DISS": {
          "title": "Diss",
          "description": "DISS",
          "type": "string"
        },
        "DISV": {
          "title": "Disv",
          "description": "DISV",
          "type": "string"
        },
        "EVNT": {
          "title": "Evnt",
          "description": "EVNT",
          "type": "string"
        },
        "FLNK": {
          "title": "Flnk",
          "description": "FLNK",
          "type": "string"
        },
        "LCNT": {
          "title": "Lcnt",
          "description": "LCNT",
          "type": "string"
        },
        "LSET": {
          "title": "Lset",
          "description": "LSET",
          "type": "string"
        },
        "PACT": {
          "title": "Pact",
          "description": "PACT",
          "type": "string"
        },
        "PHAS": {
          "title": "Phas",
          "description": "PHAS",
          "type": "string"
        },
        "PINI": {
          "title": "Pini",
          "description": "PINI",
          "type": "string"
        },
        "PRIO": {
          "title": "Prio",
          "description": "PRIO",
          "type": "string"
        },
        "PROC": {
          "title": "Proc",
          "description": "PROC",
          "type": "string"
        },
        "SCAN": {
          "title": "Scan",
          "description": "SCAN",
          "type": "string"
        },
        "SDIS": {
          "title": "Sdis",
          "description": "SDIS",
          "type": "string"
        },
        "ADEL": {
          "title": "Adel",
          "description": "ADEL",
          "type": "string"
        },
        "ALST": {
          "title": "Alst",
          "description": "ALST",
          "type": "string"
        },
        "AOFF": {
          "title": "Aoff",
          "description": "AOFF",
          "type": "string"
        },
        "ASLO": {
          "title": "Aslo",
          "description": "ASLO",
          "type": "string"
        },
        "EGU": {
          "title": "Egu",
          "description": "EGU",
          "type": "string"
        },
        "EGUF": {
          "title": "Eguf",
          "description": "EGUF",
          "type": "string"
        },
        "EGUL": {
          "title": "Egul",
          "description": "EGUL",
          "type": "string"
        },
        "EOFF": {
          "title": "Eoff",
          "description": "EOFF",
          "type": "string"
        },
        "ESLO": {
          "title": "Eslo",
          "description": "ESLO",
          "type": "string"
        },
        "HHSV": {
          "title": "Hhsv",
          "description": "HHSV",
          "type": "string"
        },
        "HIGH": {
          "title": "High",
          "description": "HIGH",
          "type": "string"
        },
        "HIHI": {
          "title": "Hihi",
          "description": "HIHI",
          "type": "string"
        },
        "HOPR": {
          "title": "Hopr",
          "description": "HOPR",
          "type": "string"
        },
        "HSV": {
          "title": "Hsv",
          "description": "HSV",
          "type": "string"
        },
        "HYST": {
          "title": "Hyst",
          "description": "HYST",
          "type": "string"
        },
        "INIT": {
          "title": "Init",
          "description": "INIT",
          "type": "string"
        },
        "LALM": {
          "title": "Lalm",
          "description": "LALM",
          "type": "string"
        },
        "LBRK": {
          "title": "Lbrk",
          "description": "LBRK",
          "type": "string"
        },
        "LINR": {
          "title": "Linr",
          "description": "LINR",
          "type": "string"
        },
        "LLSV": {
          "title": "Llsv",
          "description": "LLSV",
          "type": "string"
        },
        "LOLO": {
          "title": "Lolo",
          "description": "LOLO",
          "type": "string"
        },
        "LOPR": {
          "title": "Lopr",
          "description": "LOPR",
          "type": "string"
        },
        "LOW": {
          "title": "Low",
          "description": "LOW",
          "type": "string"
        },
        "LSV": {
          "title": "Lsv",
          "description": "LSV",
          "type": "string"
        },
        "MDEL": {
          "title": "Mdel",
          "description": "MDEL",
          "type": "string"
        },
        "MLST": {
          "title": "Mlst",
          "description": "MLST",
          "type": "string"
        },
        "ORAW": {
          "title": "Oraw",
          "description": "ORAW",
          "type": "string"
        },
        "PBRK": {
          "title": "Pbrk",
          "description": "PBRK",
          "type": "string"
        },
        "PREC": {
          "title": "Prec",
          "description": "PREC",
          "type": "integer"
        },
        "ROFF": {
          "title": "Roff",
          "description": "ROFF",
          "type": "string"
        },
        "RVAL": {
          "title": "Rval",
          "description": "RVAL",
          "type": "string"
        },
        "SIML": {
          "title": "Siml",
          "description": "SIML",
          "type": "string"
        },
        "SIMM": {
          "title": "Simm",
          "description": "SIMM",
          "type": "string"
        },
        "SIMS": {
          "title": "Sims",
          "description": "SIMS",
          "type": "string"
        },
        "SIOL": {
          "title": "Siol",
          "description": "SIOL",
          "type": "string"
        },
        "DOL": {
          "title": "Dol",
          "description": "DOL",
          "type": "string"
        },
        "DRVH": {
          "title": "Drvh",
          "description": "DRVH",
          "type": "string"
        },
        "DRVL": {
          "title": "Drvl",
          "description": "DRVL",
          "type": "string"
        },
        "IVOA": {
          "title": "Ivoa",
          "description": "IVOA",
          "type": "string"
        },
        "IVOV": {
          "title": "Ivov",
          "description": "IVOV",
          "type": "string"
        },
        "OIF": {
          "title": "Oif",
          "description": "OIF",
          "type": "string"
        },
        "OMOD": {
          "title": "Omod",
          "description": "OMOD",
          "type": "string"
        },
        "OMSL": {
          "title": "Omsl",
          "description": "OMSL",
          "type": "string"
        },
        "ORBV": {
          "title": "Orbv",
          "description": "ORBV",
          "type": "string"
        },
        "OROC": {
          "title": "Oroc",
          "description": "OROC",
          "type": "string"
        },
        "OVAL": {
          "title": "Oval",
          "description": "OVAL",
          "type": "string"
        },
        "PVAL": {
          "title": "Pval",
          "description": "PVAL",
          "type": "string"
        },
        "RBV": {
          "title": "Rbv",
          "description": "RBV",
          "type": "string"
        },
        "SMOO": {
          "title": "Smoo",
          "description": "SMOO",
          "type": "string"
        },
        "SVAL": {
          "title": "Sval",
          "description": "SVAL",
          "type": "string"
        }
      }
    },
    "AsynFloat64": {
      "title": "AsynFloat64",
      "description": "Asyn Float64 Parameter and records",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "const": "AsynFloat64",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "CamelCase name to uniquely identify this component",
          "pattern": "([A-Z][a-z0-9]*)*$",
          "type": "string"
        },
        "label": {
          "title": "Label",
          "description": "The GUI Label for this, default is name converted to Title Case",
          "type": "string"
        },
        "description": {
          "title": "Description",
          "description": "Description of what this Parameter is for",
          "type": "string"
        },
        "index_name": {
          "title": "Index Name",
          "description": "Override name of index variable in source code (defaults to name)",
          "pattern": "([A-Z][a-z0-9]*)*$",
          "type": "string"
        },
        "drv_info": {
          "title": "Drv Info",
          "description": "Info string for drvUserCreate for dynamically created parameters",
          "pattern": "^\\S{1,40}$",
          "type": "string"
        },
        "role": {
          "description": "What role does this parameter play within the device. One of:\n\n    - Readback: a parameter of the device that can be read from.\n      E.g. chipTemperature on a detector, or isHomed for a motor\n    - Action: a parameter of the device that can be written to, but there\n      is no current value.\n      E.g. reboot on a detector, or overwriteCurrentPosition for a motor\n    - Setting: a parameter of the device that can be written to, the\n      current value can be read from, and should be saved/loaded when\n      switching between configurations of the device.\n      E.g. acquireTime on a detector, or velocity of a motor\n    - Transient: a parameter of the device that can be written to and\n      read from, but should not be saved/loaded when switching between\n      configurations of the device.\n      E.g. arrayCounter on a detector, or position of a motor\n    ",
          "default": "Setting",
          "allOf": [
            {
              "$ref": "#/definitions/ParameterRole"
            }
          ]
        },
        "demand_auto_updates": {
          "title": "Demand Auto Updates",
          "description": "Should demand update when readback changes?",
          "default": false,
          "type": "boolean"
        },
        "autosave": {
          "title": "Autosave",
          "description": "Record fields that should be autosaved",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "read_record_suffix": {
          "title": "Read Record Suffix",
          "description": "The read record suffix, if not given then use $(name)_RBV",
          "type": "string"
        },
        "write_record_suffix": {
          "title": "Write Record Suffix",
          "description": "The write record suffix, if not given then use $(name)",
          "type": "string"
        },
        "display_form": {
          "description": "Display form for numeric/array fields",
          "allOf": [
            {
              "$ref": "#/definitions/DisplayForm"
            }
          ]
        },
        "initial": {
          "title": "Initial",
          "description": "The initial value of the parameter",
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "string",
              "pattern": "(\\$\\(\\w+=(-?[0-9]+(\\.[0-9]+)?)\\))"
            }
          ]
        },
        "read_widget": {
          "description": "Override the widget to use these sort of channels",
          "default": "TEXTUPDATE",
          "allOf": [
            {
              "$ref": "#/definitions/Widget"
            }
          ]
        },
        "write_widget": {
          "description": "Override the widget to use these sort of channels",
          "default": "TEXTINPUT",
          "allOf": [
            {
              "$ref": "#/definitions/Widget"
            }
          ]
        },
        "record_fields": {
          "title": "Record Fields",
          "description": "Analogue record fields",
          "default": {
            "DISA": null,
            "DISS": null,
            "DISV": null,
            "EVNT": null,
            "FLNK": null,
            "LCNT": null,
            "LSET": null,
            "PACT": null,
            "PHAS": null,
            "PINI": null,
            "PRIO": null,
            "PROC": null,
            "SCAN": null,
            "SDIS": null,
            "ADEL": null,
            "ALST": null,
            "AOFF": null,
            "ASLO": null,
            "EGU": null,
            "EGUF": null,
            "EGUL": null,
            "EOFF": null,
            "ESLO": null,
            "HHSV": null,
            "HIGH": null,
            "HIHI": null,
            "HOPR": null,
            "HSV": null,
            "HYST": null,
            "INIT": null,
            "LALM": null,
            "LBRK": null,
            "LINR": null,
            "LLSV": null,
            "LOLO": null,
            "LOPR": null,
            "LOW": null,
            "LSV": null,
            "MDEL": null,
            "MLST": null,
            "ORAW": null,
            "PBRK": null,
            "PREC": null,
            "ROFF": null,
            "RVAL": null,
            "SIML": null,
            "SIMM": null,
            "SIMS": null,
            "SIOL": null,
            "DOL": null,
            "DRVH": null,
            "DRVL": null,
            "IVOA": null,
            "IVOV": null,
            "OIF": null,
            "OMOD": null,
            "OMSL": null,
            "ORBV": null,
            "OROC": null,
            "OVAL": null,
            "PVAL": null,
            "RBV": null,
            "SMOO": null,
            "SVAL": null
          },
          "allOf": [
            {
              "$ref": "#/definitions/AnalogueAll"
            }
          ]
        }
      },
      "required": [
        "name",
        "description"
      ]
    },
    "AsynInt32": {
      "title": "AsynInt32",
      "description": "Asyn Int32 Parameter and records",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "const": "AsynInt32",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "CamelCase name to uniquely identify this component",
          "pattern": "([A-Z][a-z0-9]*)*$",
          "type": "string"
        },
        "label": {
          "title": "Label",
          "description": "The GUI Label for this, default is name converted to Title Case",
          "type": "string"
        },
        "description": {
          "title": "Description",
          "description": "Description of what this Parameter is for",
          "type": "string"
        },
        "index_name": {
          "title": "Index Name",
          "description": "Override name of index variable in source code (defaults to name)",
          "pattern": "([A-Z][a-z0-9]*)*$",
          "type": "string"
        },
        "drv_info": {
          "title": "Drv Info",
          "description": "Info string for drvUserCreate for dynamically created parameters",
          "pattern": "^\\S{1,40}$",
          "type": "string"
        },
        "role": {
          "description": "What role does this parameter play within the device. One of:\n\n    - Readback: a parameter of the device that can be read from.\n      E.g. chipTemperature on a detector, or isHomed for a motor\n    - Action: a parameter of the device that can be written to, but there\n      is no current value.\n      E.g. reboot on a detector, or overwriteCurrentPosition for a motor\n    - Setting: a parameter of the device that can be written to, the\n      current value can be read from, and should be saved/loaded when\n      switching between configurations of the device.\n      E.g. acquireTime on a detector, or velocity of a motor\n    - Transient: a parameter of the device that can be written to and\n      read from, but should not be saved/loaded when switching between\n      configurations of the device.\n      E.g. arrayCounter on a detector, or position of a motor\n    ",
          "default": "Setting",
          "allOf": [
            {
              "$ref": "#/definitions/ParameterRole"
            }
          ]
        },
        "demand_auto_updates": {
          "title": "Demand Auto Updates",
          "description": "Should demand update when readback changes?",
          "default": false,
          "type": "boolean"
        },
        "autosave": {
          "title": "Autosave",
          "description": "Record fields that should be autosaved",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "read_record_suffix": {
          "title": "Read Record Suffix",
          "description": "The read record suffix, if not given then use $(name)_RBV",
          "type": "string"
        },
        "write_record_suffix": {
          "title": "Write Record Suffix",
          "description": "The write record suffix, if not given then use $(name)",
          "type": "string"
        },
        "display_form": {
          "description": "Display form for numeric/array fields",
          "allOf": [
            {
              "$ref": "#/definitions/DisplayForm"
            }
          ]
        },
        "initial": {
          "title": "Initial",
          "description": "The initial value of the parameter",
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string",
              "pattern": "(\\$\\(\\w+=(-?\\d+)\\))"
            }
          ]
        },
        "read_widget": {
          "description": "Override the widget to use these sort of channels",
          "default": "TEXTUPDATE",
          "allOf": [
            {
              "$ref": "#/definitions/Widget"
            }
          ]
        },
        "write_widget": {
          "description": "Override the widget to use these sort of channels",
          "default": "TEXTINPUT",
          "allOf": [
            {
              "$ref": "#/definitions/Widget"
            }
          ]
        },
        "record_fields": {
          "title": "Record Fields",
          "description": "Analogue record fields",
          "default": {
            "DISA": null,
            "DISS": null,
            "DISV": null,
            "EVNT": null,
            "FLNK": null,
            "LCNT": null,
            "LSET": null,
            "PACT": null,
            "PHAS": null,
            "PINI": null,
            "PRIO": null,
            "PROC": null,
            "SCAN": null,
            "SDIS": null,
            "ADEL": null,
            "ALST": null,
            "AOFF": null,
            "ASLO": null,
            "EGU": null,
            "EGUF": null,
            "EGUL": null,
            "EOFF": null,
            "ESLO": null,
            "HHSV": null,
            "HIGH": null,
            "HIHI": null,
            "HOPR": null,
            "HSV": null,
            "HYST": null,
            "INIT": null,
            "LALM": null,
            "LBRK": null,
            "LINR": null,
            "LLSV": null,
            "LOLO": null,
            "LOPR": null,
            "LOW": null,
            "LSV": null,
            "MDEL": null,
            "MLST": null,
            "ORAW": null,
            "PBRK": null,
            "PREC": null,
            "ROFF": null,
            "RVAL": null,
            "SIML": null,
            "SIMM": null,
            "SIMS": null,
            "SIOL": null,
            "DOL": null,
            "DRVH": null,
            "DRVL": null,
            "IVOA": null,
            "IVOV": null,
            "OIF": null,
            "OMOD": null,
            "OMSL": null,
            "ORBV": null,
            "OROC": null,
            "OVAL": null,
            "PVAL": null,
            "RBV": null,
            "SMOO": null,
            "SVAL": null
          },
          "allOf": [
            {
              "$ref": "#/definitions/AnalogueAll"
            }
          ]
        }
      },
      "required": [
        "name",
        "description"
      ]
    },
    "LongAll": {
      "title": "LongAll",
      "type": "object",
      "properties": {
        "DISA": {
          "title": "Disa",
          "description": "DISA",
          "type": "string"
        },
        "DISS": {
          "title": "Diss",
          "description": "DISS",
          "type": "string"
        },
        "DISV": {
          "title": "Disv",
          "description": "DISV",
          "type": "string"
        },
        "EVNT": {
          "title": "Evnt",
          "description": "EVNT",
          "type": "string"
        },
        "FLNK": {
          "title": "Flnk",
          "description": "FLNK",
          "type": "string"
        },
        "LCNT": {
          "title": "Lcnt",
          "description": "LCNT",
          "type": "string"
        },
        "LSET": {
          "title": "Lset",
          "description": "LSET",
          "type": "string"
        },
        "PACT": {
          "title": "Pact",
          "description": "PACT",
          "type": "string"
        },
        "PHAS": {
          "title": "Phas",
          "description": "PHAS",
          "type": "string"
        },
        "PINI": {
          "title": "Pini",
          "description": "PINI",
          "type": "string"
        },
        "PRIO": {
          "title": "Prio",
          "description": "PRIO",
          "type": "string"
        },
        "PROC": {
          "title": "Proc",
          "description": "PROC",
          "type": "string"
        },
        "SCAN": {
          "title": "Scan",
          "description": "SCAN",
          "type": "string"
        },
        "SDIS": {
          "title": "Sdis",
          "description": "SDIS",
          "type": "string"
        },
        "ADEL": {
          "title": "Adel",
          "description": "ADEL",
          "type": "string"
        },
        "ALST": {
          "title": "Alst",
          "description": "ALST",
          "type": "string"
        },
        "EGU": {
          "title": "Egu",
          "description": "EGU",
          "type": "string"
        },
        "HHSV": {
          "title": "Hhsv",
          "description": "HHSV",
          "type": "string"
        },
        "HIGH": {
          "title": "High",
          "description": "HIGH",
          "type": "string"
        },
        "HIHI": {
          "title": "Hihi",
          "description": "HIHI",
          "type": "string"
        },
        "HOPR": {
          "title": "Hopr",
          "description": "HOPR",
          "type": "string"
        },
        "HSV": {
          "title": "Hsv",
          "description": "HSV",
          "type": "string"
        },
        "HYST": {
          "title": "Hyst",
          "description": "HYST",
          "type": "string"
        },
        "LALM": {
          "title": "Lalm",
          "description": "LALM",
          "type": "string"
        },
        "LLSV": {
          "title": "Llsv",
          "description": "LLSV",
          "type": "string"
        },
        "LOLO": {
          "title": "Lolo",
          "description": "LOLO",
          "type": "string"
        },
        "LOPR": {
          "title": "Lopr",
          "description": "LOPR",
          "type": "string"
        },
        "LOW": {
          "title": "Low",
          "description": "LOW",
          "type": "string"
        },
        "LSV": {
          "title": "Lsv",
          "description": "LSV",
          "type": "string"
        },
        "MDEL": {
          "title": "Mdel",
          "description": "MDEL",
          "type": "string"
        },
        "MLST": {
          "title": "Mlst",
          "description": "MLST",
          "type": "string"
        },
        "SIML": {
          "title": "Siml",
          "description": "SIML",
          "type": "string"
        },
        "SIMM": {
          "title": "Simm",
          "description": "SIMM",
          "type": "string"
        },
        "SIMS": {
          "title": "Sims",
          "description": "SIMS",
          "type": "string"
        },
        "SIOL": {
          "title": "Siol",
          "description": "SIOL",
          "type": "string"
        },
        "DOL": {
          "title": "Dol",
          "description": "DOL",
          "type": "string"
        },
        "DRVH": {
          "title": "Drvh",
          "description": "DRVH",
          "type": "string"
        },
        "DRVL": {
          "title": "Drvl",
          "description": "DRVL",
          "type": "string"
        },
        "IVOA": {
          "title": "Ivoa",
          "description": "IVOA",
          "type": "string"
        },
        "IVOV": {
          "title": "Ivov",
          "description": "IVOV",
          "type": "string"
        },
        "OMSL": {
          "title": "Omsl",
          "description": "OMSL",
          "type": "string"
        },
        "SVAL": {
          "title": "Sval",
          "description": "SVAL",
          "type": "string"
        }
      }
    },
    "AsynLong": {
      "title": "AsynLong",
      "description": "Asyn Long Parameter and records",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "const": "AsynLong",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "CamelCase name to uniquely identify this component",
          "pattern": "([A-Z][a-z0-9]*)*$",
          "type": "string"
        },
        "label": {
          "title": "Label",
          "description": "The GUI Label for this, default is name converted to Title Case",
          "type": "string"
        },
        "description": {
          "title": "Description",
          "description": "Description of what this Parameter is for",
          "type": "string"
        },
        "index_name": {
          "title": "Index Name",
          "description": "Override name of index variable in source code (defaults to name)",
          "pattern": "([A-Z][a-z0-9]*)*$",
          "type": "string"
        },
        "drv_info": {
          "title": "Drv Info",
          "description": "Info string for drvUserCreate for dynamically created parameters",
          "pattern": "^\\S{1,40}$",
          "type": "string"
        },
        "role": {
          "description": "What role does this parameter play within the device. One of:\n\n    - Readback: a parameter of the device that can be read from.\n      E.g. chipTemperature on a detector, or isHomed for a motor\n    - Action: a parameter of the device that can be written to, but there\n      is no current value.\n      E.g. reboot on a detector, or overwriteCurrentPosition for a motor\n    - Setting: a parameter of the device that can be written to, the\n      current value can be read from, and should be saved/loaded when\n      switching between configurations of the device.\n      E.g. acquireTime on a detector, or velocity of a motor\n    - Transient: a parameter of the device that can be written to and\n      read from, but should not be saved/loaded when switching between\n      configurations of the device.\n      E.g. arrayCounter on a detector, or position of a motor\n    ",
          "default": "Setting",
          "allOf": [
            {
              "$ref": "#/definitions/ParameterRole"
            }
          ]
        },
        "demand_auto_updates": {
          "title": "Demand Auto Updates",
          "description": "Should demand update when readback changes?",
          "default": false,
          "type": "boolean"
        },
        "autosave": {
          "title": "Autosave",
          "description": "Record fields that should be autosaved",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "read_record_suffix": {
          "title": "Read Record Suffix",
          "description": "The read record suffix, if not given then use $(name)_RBV",
          "type": "string"
        },
        "write_record_suffix": {
          "title": "Write Record Suffix",
          "description": "The write record suffix, if not given then use $(name)",
          "type": "string"
        },
        "display_form": {
          "description": "Display form for numeric/array fields",
          "allOf": [
            {
              "$ref": "#/definitions/DisplayForm"
            }
          ]
        },
        "initial": {
          "title": "Initial",
          "description": "The initial value of the parameter",
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string",
              "pattern": "(\\$\\(\\w+=(-?\\d+)\\))"
            }
          ]
        },
        "read_widget": {
          "description": "Override the widget to use these sort of channels",
          "default": "TEXTUPDATE",
          "allOf": [
            {
              "$ref": "#/definitions/Widget"
            }
          ]
        },
        "write_widget": {
          "description": "Override the widget to use these sort of channels",
          "default": "TEXTINPUT",
          "allOf": [
            {
              "$ref": "#/definitions/Widget"
            }
          ]
        },
        "record_fields": {
          "title": "Record Fields",
          "description": "Long record fields",
          "default": {
            "DISA": null,
            "DISS": null,
            "DISV": null,
            "EVNT": null,
            "FLNK": null,
            "LCNT": null,
            "LSET": null,
            "PACT": null,
            "PHAS": null,
            "PINI": null,
            "PRIO": null,
            "PROC": null,
            "SCAN": null,
            "SDIS": null,
            "ADEL": null,
            "ALST": null,
            "EGU": null,
            "HHSV": null,
            "HIGH": null,
            "HIHI": null,
            "HOPR": null,
            "HSV": null,
            "HYST": null,
            "LALM": null,
            "LLSV": null,
            "LOLO": null,
            "LOPR": null,
            "LOW": null,
            "LSV": null,
            "MDEL": null,
            "MLST": null,
            "SIML": null,
            "SIMM": null,
            "SIMS": null,
            "SIOL": null,
            "DOL": null,
            "DRVH": null,
            "DRVL": null,
            "IVOA": null,
            "IVOV": null,
            "OMSL": null,
            "SVAL": null
          },
          "allOf": [
            {
              "$ref": "#/definitions/LongAll"
            }
          ]
        }
      },
      "required": [
        "name",
        "description"
      ]
    },
    "MultiBitBinaryAll": {
      "title": "MultiBitBinaryAll",
      "type": "object",
      "properties": {
        "DISA": {
          "title": "Disa",
          "description": "DISA",
          "type": "string"
        },
        "DISS": {
          "title": "Diss",
          "description": "DISS",
          "type": "string"
        },
        "DISV": {
          "title": "Disv",
          "description": "DISV",
          "type": "string"
        },
        "EVNT": {
          "title": "Evnt",
          "description": "EVNT",
          "type": "string"
        },
        "FLNK": {
          "title": "Flnk",
          "description": "FLNK",
          "type": "string"
        },
        "LCNT": {
          "title": "Lcnt",
          "description": "LCNT",
          "type": "string"
        },
        "LSET": {
          "title": "Lset",
          "description": "LSET",
          "type": "string"
        },
        "PACT": {
          "title": "Pact",
          "description": "PACT",
          "type": "string"
        },
        "PHAS": {
          "title": "Phas",
          "description": "PHAS",
          "type": "string"
        },
        "PINI": {
          "title": "Pini",
          "description": "PINI",
          "type": "string"
        },
        "PRIO": {
          "title": "Prio",
          "description": "PRIO",
          "type": "string"
        },
        "PROC": {
          "title": "Proc",
          "description": "PROC",
          "type": "string"
        },
        "SCAN": {
          "title": "Scan",
          "description": "SCAN",
          "type": "string"
        },
        "SDIS": {
          "title": "Sdis",
          "description": "SDIS",
          "type": "string"
        },
        "COSV": {
          "title": "Cosv",
          "description": "COSV",
          "type": "string"
        },
        "EIST": {
          "title": "Eist",
          "description": "EIST",
          "type": "string"
        },
        "EISV": {
          "title": "Eisv",
          "description": "EISV",
          "type": "string"
        },
        "EIVL": {
          "title": "Eivl",
          "description": "EIVL",
          "type": "string"
        },
        "ELST": {
          "title": "Elst",
          "description": "ELST",
          "type": "string"
        },
        "ELSV": {
          "title": "Elsv",
          "description": "ELSV",
          "type": "string"
        },
        "ELVL": {
          "title": "Elvl",
          "description": "ELVL",
          "type": "string"
        },
        "FFST": {
          "title": "Ffst",
          "description": "FFST",
          "type": "string"
        },
        "FFSV": {
          "title": "Ffsv",
          "description": "FFSV",
          "type": "string"
        },
        "FFVL": {
          "title": "Ffvl",
          "description": "FFVL",
          "type": "string"
        },
        "FRST": {
          "title": "Frst",
          "description": "FRST",
          "type": "string"
        },
        "FRSV": {
          "title": "Frsv",
          "description": "FRSV",
          "type": "string"
        },
        "FRVL": {
          "title": "Frvl",
          "description": "FRVL",
          "type": "string"
        },
        "FTST": {
          "title": "Ftst",
          "description": "FTST",
          "type": "string"
        },
        "FTSV": {
          "title": "Ftsv",
          "description": "FTSV",
          "type": "string"
        },
        "FTVL": {
          "title": "Ftvl",
          "description": "FTVL",
          "type": "string"
        },
        "FVST": {
          "title": "Fvst",
          "description": "FVST",
          "type": "string"
        },
        "FVSV": {
          "title": "Fvsv",
          "description": "FVSV",
          "type": "string"
        },
        "FVVL": {
          "title": "Fvvl",
          "description": "FVVL",
          "type": "string"
        },
        "LALM": {
          "title": "Lalm",
          "description": "LALM",
          "type": "string"
        },
        "MASK": {
          "title": "Mask",
          "description": "MASK",
          "type": "string"
        },
        "MLST": {
          "title": "Mlst",
          "description": "MLST",
          "type": "string"
        },
        "NIST": {
          "title": "Nist",
          "description": "NIST",
          "type": "string"
        },
        "NISV": {
          "title": "Nisv",
          "description": "NISV",
          "type": "string"
        },
        "NIVL": {
          "title": "Nivl",
          "description": "NIVL",
          "type": "string"
        },
        "NOBT": {
          "title": "Nobt",
          "description": "NOBT",
          "type": "string"
        },
        "ONST": {
          "title": "Onst",
          "description": "ONST",
          "type": "string"
        },
        "ONSV": {
          "title": "Onsv",
          "description": "ONSV",
          "type": "string"
        },
        "ONVL": {
          "title": "Onvl",
          "description": "ONVL",
          "type": "string"
        },
        "ORAW": {
          "title": "Oraw",
          "description": "ORAW",
          "type": "string"
        },
        "RVAL": {
          "title": "Rval",
          "description": "RVAL",
          "type": "string"
        },
        "SDEF": {
          "title": "Sdef",
          "description": "SDEF",
          "type": "string"
        },
        "SHFT": {
          "title": "Shft",
          "description": "SHFT",
          "type": "string"
        },
        "SIML": {
          "title": "Siml",
          "description": "SIML",
          "type": "string"
        },
        "SIMM": {
          "title": "Simm",
          "description": "SIMM",
          "type": "string"
        },
        "SIMS": {
          "title": "Sims",
          "description": "SIMS",
          "type": "string"
        },
        "SIOL": {
          "title": "Siol",
          "description": "SIOL",
          "type": "string"
        },
        "SVST": {
          "title": "Svst",
          "description": "SVST",
          "type": "string"
        },
        "SVSV": {
          "title": "Svsv",
          "description": "SVSV",
          "type": "string"
        },
        "SVVL": {
          "title": "Svvl",
          "description": "SVVL",
          "type": "string"
        },
        "SXST": {
          "title": "Sxst",
          "description": "SXST",
          "type": "string"
        },
        "SXSV": {
          "title": "Sxsv",
          "description": "SXSV",
          "type": "string"
        },
        "SXVL": {
          "title": "Sxvl",
          "description": "SXVL",
          "type": "string"
        },
        "TEST": {
          "title": "Test",
          "description": "TEST",
          "type": "string"
        },
        "TESV": {
          "title": "Tesv",
          "description": "TESV",
          "type": "string"
        },
        "TEVL": {
          "title": "Tevl",
          "description": "TEVL",
          "type": "string"
        },
        "THST": {
          "title": "Thst",
          "description": "THST",
          "type": "string"
        },
        "THSV": {
          "title": "Thsv",
          "description": "THSV",
          "type": "string"
        },
        "THVL": {
          "title": "Thvl",
          "description": "THVL",
          "type": "string"
        },
        "TTST": {
          "title": "Ttst",
          "description": "TTST",
          "type": "string"
        },
        "TTSV": {
          "title": "Ttsv",
          "description": "TTSV",
          "type": "string"
        },
        "TTVL": {
          "title": "Ttvl",
          "description": "TTVL",
          "type": "string"
        },
        "TVST": {
          "title": "Tvst",
          "description": "TVST",
          "type": "string"
        },
        "TVSV": {
          "title": "Tvsv",
          "description": "TVSV",
          "type": "string"
        },
        "TVVL": {
          "title": "Tvvl",
          "description": "TVVL",
          "type": "string"
        },
        "TWST": {
          "title": "Twst",
          "description": "TWST",
          "type": "string"
        },
        "TWSV": {
          "title": "Twsv",
          "description": "TWSV",
          "type": "string"
        },
        "TWVL": {
          "title": "Twvl",
          "description": "TWVL",
          "type": "string"
        },
        "UNSV": {
          "title": "Unsv",
          "description": "UNSV",
          "type": "string"
        },
        "ZRST": {
          "title": "Zrst",
          "description": "ZRST",
          "type": "string"
        },
        "ZRSV": {
          "title": "Zrsv",
          "description": "ZRSV",
          "type": "string"
        },
        "ZRVL": {
          "title": "Zrvl",
          "description": "ZRVL",
          "type": "string"
        },
        "DOL": {
          "title": "Dol",
          "description": "DOL",
          "type": "string"
        },
        "IVOA": {
          "title": "Ivoa",
          "description": "IVOA",
          "type": "string"
        },
        "IVOV": {
          "title": "Ivov",
          "description": "IVOV",
          "type": "string"
        },
        "OMSL": {
          "title": "Omsl",
          "description": "OMSL",
          "type": "string"
        },
        "ORBV": {
          "title": "Orbv",
          "description": "ORBV",
          "type": "string"
        },
        "RBV": {
          "title": "Rbv",
          "description": "RBV",
          "type": "string"
        },
        "SVAL": {
          "title": "Sval",
          "description": "SVAL",
          "type": "string"
        }
      }
    },
    "AsynMultiBitBinary": {
      "title": "AsynMultiBitBinary",
      "description": "Asyn MultiBitBinary Parameter and records",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "const": "AsynMultiBitBinary",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "CamelCase name to uniquely identify this component",
          "pattern": "([A-Z][a-z0-9]*)*$",
          "type": "string"
        },
        "label": {
          "title": "Label",
          "description": "The GUI Label for this, default is name converted to Title Case",
          "type": "string"
        },
        "description": {
          "title": "Description",
          "description": "Description of what this Parameter is for",
          "type": "string"
        },
        "index_name": {
          "title": "Index Name",
          "description": "Override name of index variable in source code (defaults to name)",
          "pattern": "([A-Z][a-z0-9]*)*$",
          "type": "string"
        },
        "drv_info": {
          "title": "Drv Info",
          "description": "Info string for drvUserCreate for dynamically created parameters",
          "pattern": "^\\S{1,40}$",
          "type": "string"
        },
        "role": {
          "description": "What role does this parameter play within the device. One of:\n\n    - Readback: a parameter of the device that can be read from.\n      E.g. chipTemperature on a detector, or isHomed for a motor\n    - Action: a parameter of the device that can be written to, but there\n      is no current value.\n      E.g. reboot on a detector, or overwriteCurrentPosition for a motor\n    - Setting: a parameter of the device that can be written to, the\n      current value can be read from, and should be saved/loaded when\n      switching between configurations of the device.\n      E.g. acquireTime on a detector, or velocity of a motor\n    - Transient: a parameter of the device that can be written to and\n      read from, but should not be saved/loaded when switching between\n      configurations of the device.\n      E.g. arrayCounter on a detector, or position of a motor\n    ",
          "default": "Setting",
          "allOf": [
            {
              "$ref": "#/definitions/ParameterRole"
            }
          ]
        },
        "demand_auto_updates": {
          "title": "Demand Auto Updates",
          "description": "Should demand update when readback changes?",
          "default": false,
          "type": "boolean"
        },
        "autosave": {
          "title": "Autosave",
          "description": "Record fields that should be autosaved",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "read_record_suffix": {
          "title": "Read Record Suffix",
          "description": "The read record suffix, if not given then use $(name)_RBV",
          "type": "string"
        },
        "write_record_suffix": {
          "title": "Write Record Suffix",
          "description": "The write record suffix, if not given then use $(name)",
          "type": "string"
        },
        "display_form": {
          "description": "Display form for numeric/array fields",
          "allOf": [
            {
              "$ref": "#/definitions/DisplayForm"
            }
          ]
        },
        "initial": {
          "title": "Initial",
          "description": "The initial value of the parameter",
          "anyOf": [
            {
              "type": "integer",
              "minimum": 0,
              "maximum": 15
            },
            {
              "type": "string",
              "pattern": "(\\$\\(\\w+=([0-15])\\))"
            }
          ]
        },
        "read_widget": {
          "description": "Override the widget to use these sort of channels",
          "default": "TEXTUPDATE",
          "allOf": [
            {
              "$ref": "#/definitions/Widget"
            }
          ]
        },
        "write_widget": {
          "description": "Override the widget to use these sort of channels",
          "default": "COMBO",
          "allOf": [
            {
              "$ref": "#/definitions/Widget"
            }
          ]
        },
        "record_fields": {
          "title": "Record Fields",
          "description": "Multi-bit binary record fields",
          "default": {
            "DISA": null,
            "DISS": null,
            "DISV": null,
            "EVNT": null,
            "FLNK": null,
            "LCNT": null,
            "LSET": null,
            "PACT": null,
            "PHAS": null,
            "PINI": null,
            "PRIO": null,
            "PROC": null,
            "SCAN": null,
            "SDIS": null,
            "COSV": null,
            "EIST": null,
            "EISV": null,
            "EIVL": null,
            "ELST": null,
            "ELSV": null,
            "ELVL": null,
            "FFST": null,
            "FFSV": null,
            "FFVL": null,
            "FRST": null,
            "FRSV": null,
            "FRVL": null,
            "FTST": null,
            "FTSV": null,
            "FTVL": null,
            "FVST": null,
            "FVSV": null,
            "FVVL": null,
            "LALM": null,
            "MASK": null,
            "MLST": null,
            "NIST": null,
            "NISV": null,
            "NIVL": null,
            "NOBT": null,
            "ONST": null,
            "ONSV": null,
            "ONVL": null,
            "ORAW": null,
            "RVAL": null,
            "SDEF": null,
            "SHFT": null,
            "SIML": null,
            "SIMM": null,
            "SIMS": null,
            "SIOL": null,
            "SVST": null,
            "SVSV": null,
            "SVVL": null,
            "SXST": null,
            "SXSV": null,
            "SXVL": null,
            "TEST": null,
            "TESV": null,
            "TEVL": null,
            "THST": null,
            "THSV": null,
            "THVL": null,
            "TTST": null,
            "TTSV": null,
            "TTVL": null,
            "TVST": null,
            "TVSV": null,
            "TVVL": null,
            "TWST": null,
            "TWSV": null,
            "TWVL": null,
            "UNSV": null,
            "ZRST": null,
            "ZRSV": null,
            "ZRVL": null,
            "DOL": null,
            "IVOA": null,
            "IVOV": null,
            "OMSL": null,
            "ORBV": null,
            "RBV": null,
            "SVAL": null
          },
          "allOf": [
            {
              "$ref": "#/definitions/MultiBitBinaryAll"
            }
          ]
        }
      },
      "required": [
        "name",
        "description"
      ]
    },
    "StringAll": {
      "title": "StringAll",
      "type": "object",
      "properties": {
        "DISA": {
          "title": "Disa",
          "description": "DISA",
          "type": "string"
        },
        "DISS": {
          "title": "Diss",
          "description": "DISS",
          "type": "string"
        },
        "DISV": {
          "title": "Disv",
          "description": "DISV",
          "type": "string"
        },
        "EVNT": {
          "title": "Evnt",
          "description": "EVNT",
          "type": "string"
        },
        "FLNK": {
          "title": "Flnk",
          "description": "FLNK",
          "type": "string"
        },
        "LCNT": {
          "title": "Lcnt",
          "description": "LCNT",
          "type": "string"
        },
        "LSET": {
          "title": "Lset",
          "description": "LSET",
          "type": "string"
        },
        "PACT": {
          "title": "Pact",
          "description": "PACT",
          "type": "string"
        },
        "PHAS": {
          "title": "Phas",
          "description": "PHAS",
          "type": "string"
        },
        "PINI": {
          "title": "Pini",
          "description": "PINI",
          "type": "string"
        },
        "PRIO": {
          "title": "Prio",
          "description": "PRIO",
          "type": "string"
        },
        "PROC": {
          "title": "Proc",
          "description": "PROC",
          "type": "string"
        },
        "SCAN": {
          "title": "Scan",
          "description": "SCAN",
          "type": "string"
        },
        "SDIS": {
          "title": "Sdis",
          "description": "SDIS",
          "type": "string"
        },
        "APST": {
          "title": "Apst",
          "description": "APST",
          "type": "string"
        },
        "MPST": {
          "title": "Mpst",
          "description": "MPST",
          "type": "string"
        },
        "OVAL": {
          "title": "Oval",
          "description": "OVAL",
          "type": "string"
        },
        "SIML": {
          "title": "Siml",
          "description": "SIML",
          "type": "string"
        },
        "SIMM": {
          "title": "Simm",
          "description": "SIMM",
          "type": "string"
        },
        "SIMS": {
          "title": "Sims",
          "description": "SIMS",
          "type": "string"
        },
        "SIOL": {
          "title": "Siol",
          "description": "SIOL",
          "type": "string"
        },
        "DOL": {
          "title": "Dol",
          "description": "DOL",
          "type": "string"
        },
        "IVOA": {
          "title": "Ivoa",
          "description": "IVOA",
          "type": "string"
        },
        "IVOV": {
          "title": "Ivov",
          "description": "IVOV",
          "type": "string"
        },
        "OMSL": {
          "title": "Omsl",
          "description": "OMSL",
          "type": "string"
        },
        "SVAL": {
          "title": "Sval",
          "description": "SVAL",
          "type": "string"
        }
      }
    },
    "AsynString": {
      "title": "AsynString",
      "description": "Asyn String Parameter and records",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "const": "AsynString",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "CamelCase name to uniquely identify this component",
          "pattern": "([A-Z][a-z0-9]*)*$",
          "type": "string"
        },
        "label": {
          "title": "Label",
          "description": "The GUI Label for this, default is name converted to Title Case",
          "type": "string"
        },
        "description": {
          "title": "Description",
          "description": "Description of what this Parameter is for",
          "type": "string"
        },
        "index_name": {
          "title": "Index Name",
          "description": "Override name of index variable in source code (defaults to name)",
          "pattern": "([A-Z][a-z0-9]*)*$",
          "type": "string"
        },
        "drv_info": {
          "title": "Drv Info",
          "description": "Info string for drvUserCreate for dynamically created parameters",
          "pattern": "^\\S{1,40}$",
          "type": "string"
        },
        "role": {
          "description": "What role does this parameter play within the device. One of:\n\n    - Readback: a parameter of the device that can be read from.\n      E.g. chipTemperature on a detector, or isHomed for a motor\n    - Action: a parameter of the device that can be written to, but there\n      is no current value.\n      E.g. reboot on a detector, or overwriteCurrentPosition for a motor\n    - Setting: a parameter of the device that can be written to, the\n      current value can be read from, and should be saved/loaded when\n      switching between configurations of the device.\n      E.g. acquireTime on a detector, or velocity of a motor\n    - Transient: a parameter of the device that can be written to and\n      read from, but should not be saved/loaded when switching between\n      configurations of the device.\n      E.g. arrayCounter on a detector, or position of a motor\n    ",
          "default": "Setting",
          "allOf": [
            {
              "$ref": "#/definitions/ParameterRole"
            }
          ]
        },
        "demand_auto_updates": {
          "title": "Demand Auto Updates",
          "description": "Should demand update when readback changes?",
          "default": false,
          "type": "boolean"
        },
        "autosave": {
          "title": "Autosave",
          "description": "Record fields that should be autosaved",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "read_record_suffix": {
          "title": "Read Record Suffix",
          "description": "The read record suffix, if not given then use $(name)_RBV",
          "type": "string"
        },
        "write_record_suffix": {
          "title": "Write Record Suffix",
          "description": "The write record suffix, if not given then use $(name)",
          "type": "string"
        },
        "display_form": {
          "description": "Display form for numeric/array fields",
          "allOf": [
            {
              "$ref": "#/definitions/DisplayForm"
            }
          ]
        },
        "initial": {
          "title": "Initial",
          "description": "The initial value of the parameter",
          "type": "string"
        },
        "read_widget": {
          "description": "Override the widget to use these sort of channels",
          "default": "TEXTUPDATE",
          "allOf": [
            {
              "$ref": "#/definitions/Widget"
            }
          ]
        },
        "write_widget": {
          "description": "Override the widget to use these sort of channels",
          "default": "TEXTINPUT",
          "allOf": [
            {
              "$ref": "#/definitions/Widget"
            }
          ]
        },
        "record_fields": {
          "title": "Record Fields",
          "description": "String record fields",
          "default": {
            "DISA": null,
            "DISS": null,
            "DISV": null,
            "EVNT": null,
            "FLNK": null,
            "LCNT": null,
            "LSET": null,
            "PACT": null,
            "PHAS": null,
            "PINI": null,
            "PRIO": null,
            "PROC": null,
            "SCAN": null,
            "SDIS": null,
            "APST": null,
            "MPST": null,
            "OVAL": null,
            "SIML": null,
            "SIMM": null,
            "SIMS": null,
            "SIOL": null,
            "DOL": null,
            "IVOA": null,
            "IVOV": null,
            "OMSL": null,
            "SVAL": null
          },
          "allOf": [
            {
              "$ref": "#/definitions/StringAll"
            }
          ]
        }
      },
      "required": [
        "name",
        "description"
      ]
    },
    "WaveformAll": {
      "title": "WaveformAll",
      "type": "object",
      "properties": {
        "DISA": {
          "title": "Disa",
          "description": "DISA",
          "type": "string"
        },
        "DISS": {
          "title": "Diss",
          "description": "DISS",
          "type": "string"
        },
        "DISV": {
          "title": "Disv",
          "description": "DISV",
          "type": "string"
        },
        "EVNT": {
          "title": "Evnt",
          "description": "EVNT",
          "type": "string"
        },
        "FLNK": {
          "title": "Flnk",
          "description": "FLNK",
          "type": "string"
        },
        "LCNT": {
          "title": "Lcnt",
          "description": "LCNT",
          "type": "string"
        },
        "LSET": {
          "title": "Lset",
          "description": "LSET",
          "type": "string"
        },
        "PACT": {
          "title": "Pact",
          "description": "PACT",
          "type": "string"
        },
        "PHAS": {
          "title": "Phas",
          "description": "PHAS",
          "type": "string"
        },
        "PINI": {
          "title": "Pini",
          "description": "PINI",
          "type": "string"
        },
        "PRIO": {
          "title": "Prio",
          "description": "PRIO",
          "type": "string"
        },
        "PROC": {
          "title": "Proc",
          "description": "PROC",
          "type": "string"
        },
        "SCAN": {
          "title": "Scan",
          "description": "SCAN",
          "type": "string"
        },
        "SDIS": {
          "title": "Sdis",
          "description": "SDIS",
          "type": "string"
        },
        "APST": {
          "title": "Apst",
          "description": "APST",
          "type": "string"
        },
        "BPTR": {
          "title": "Bptr",
          "description": "BPTR",
          "type": "string"
        },
        "BUSY": {
          "title": "Busy",
          "description": "BUSY",
          "type": "string"
        },
        "EGU": {
          "title": "Egu",
          "description": "EGU",
          "type": "string"
        },
        "FTVL": {
          "title": "Ftvl",
          "description": "FTVL",
          "type": "string"
        },
        "HASH": {
          "title": "Hash",
          "description": "HASH",
          "type": "string"
        },
        "HOPR": {
          "title": "Hopr",
          "description": "HOPR",
          "type": "string"
        },
        "LOPR": {
          "title": "Lopr",
          "description": "LOPR",
          "type": "string"
        },
        "MPST": {
          "title": "Mpst",
          "description": "MPST",
          "type": "string"
        },
        "NELM": {
          "title": "Nelm",
          "description": "NELM",
          "type": "string"
        },
        "NORD": {
          "title": "Nord",
          "description": "NORD",
          "type": "string"
        },
        "PREC": {
          "title": "Prec",
          "description": "PREC",
          "type": "integer"
        },
        "RARM": {
          "title": "Rarm",
          "description": "RARM",
          "type": "string"
        },
        "SIML": {
          "title": "Siml",
          "description": "SIML",
          "type": "string"
        },
        "SIMM": {
          "title": "Simm",
          "description": "SIMM",
          "type": "string"
        },
        "SIMS": {
          "title": "Sims",
          "description": "SIMS",
          "type": "string"
        },
        "SIOL": {
          "title": "Siol",
          "description": "SIOL",
          "type": "string"
        }
      }
    },
    "AsynWaveform": {
      "title": "AsynWaveform",
      "description": "Asyn Waveform Parameter and records",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "const": "AsynWaveform",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "CamelCase name to uniquely identify this component",
          "pattern": "([A-Z][a-z0-9]*)*$",
          "type": "string"
        },
        "label": {
          "title": "Label",
          "description": "The GUI Label for this, default is name converted to Title Case",
          "type": "string"
        },
        "description": {
          "title": "Description",
          "description": "Description of what this Parameter is for",
          "type": "string"
        },
        "index_name": {
          "title": "Index Name",
          "description": "Override name of index variable in source code (defaults to name)",
          "pattern": "([A-Z][a-z0-9]*)*$",
          "type": "string"
        },
        "drv_info": {
          "title": "Drv Info",
          "description": "Info string for drvUserCreate for dynamically created parameters",
          "pattern": "^\\S{1,40}$",
          "type": "string"
        },
        "role": {
          "description": "What role does this parameter play within the device. One of:\n\n    - Readback: a parameter of the device that can be read from.\n      E.g. chipTemperature on a detector, or isHomed for a motor\n    - Action: a parameter of the device that can be written to, but there\n      is no current value.\n      E.g. reboot on a detector, or overwriteCurrentPosition for a motor\n    - Setting: a parameter of the device that can be written to, the\n      current value can be read from, and should be saved/loaded when\n      switching between configurations of the device.\n      E.g. acquireTime on a detector, or velocity of a motor\n    - Transient: a parameter of the device that can be written to and\n      read from, but should not be saved/loaded when switching between\n      configurations of the device.\n      E.g. arrayCounter on a detector, or position of a motor\n    ",
          "default": "Setting",
          "allOf": [
            {
              "$ref": "#/definitions/ParameterRole"
            }
          ]
        },
        "demand_auto_updates": {
          "title": "Demand Auto Updates",
          "description": "Should demand update when readback changes?",
          "default": false,
          "type": "boolean"
        },
        "autosave": {
          "title": "Autosave",
          "description": "Record fields that should be autosaved",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "read_record_suffix": {
          "title": "Read Record Suffix",
          "description": "The read record suffix, if not given then use $(name)_RBV",
          "type": "string"
        },
        "write_record_suffix": {
          "title": "Write Record Suffix",
          "description": "The write record suffix, if not given then use $(name)",
          "type": "string"
        },
        "display_form": {
          "description": "Display form for numeric/array fields",
          "allOf": [
            {
              "$ref": "#/definitions/DisplayForm"
            }
          ]
        },
        "initial": {
          "title": "Initial"
        },
        "read_widget": {
          "description": "Override the widget to use these sort of channels",
          "default": "TEXTUPDATE",
          "allOf": [
            {
              "$ref": "#/definitions/Widget"
            }
          ]
        },
        "write_widget": {
          "description": "Override the widget to use these sort of channels",
          "default": "TEXTINPUT",
          "allOf": [
            {
              "$ref": "#/definitions/Widget"
            }
          ]
        },
        "record_fields": {
          "title": "Record Fields",
          "description": "Waveform record fields",
          "default": {
            "DISA": null,
            "DISS": null,
            "DISV": null,
            "EVNT": null,
            "FLNK": null,
            "LCNT": null,
            "LSET": null,
            "PACT": null,
            "PHAS": null,
            "PINI": null,
            "PRIO": null,
            "PROC": null,
            "SCAN": null,
            "SDIS": null,
            "APST": null,
            "BPTR": null,
            "BUSY": null,
            "EGU": null,
            "FTVL": null,
            "HASH": null,
            "HOPR": null,
            "LOPR": null,
            "MPST": null,
            "NELM": null,
            "NORD": null,
            "PREC": null,
            "RARM": null,
            "SIML": null,
            "SIMM": null,
            "SIMS": null,
            "SIOL": null
          },
          "allOf": [
            {
              "$ref": "#/definitions/WaveformAll"
            }
          ]
        }
      },
      "required": [
        "name",
        "description"
      ]
    },
    "ComponentGroup": {
      "title": "ComponentGroup",
      "description": "Group that can contain multiple parameters or other Groups.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "const": "ComponentGroup",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "CamelCase name to uniquely identify this component",
          "pattern": "([A-Z][a-z0-9]*)*$",
          "type": "string"
        },
        "label": {
          "title": "Label",
          "description": "The GUI Label for this, default is name converted to Title Case",
          "type": "string"
        },
        "layout": {
          "description": "The layout to arrange the children within",
          "default": "BOX",
          "allOf": [
            {
              "$ref": "#/definitions/Layout"
            }
          ]
        },
        "children": {
          "title": "Children",
          "description": "Child Parameters or Groups",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/ComponentGroup"
              },
              {
                "$ref": "#/definitions/AsynBinary"
              },
              {
                "$ref": "#/definitions/AsynBusy"
              },
              {
                "$ref": "#/definitions/AsynFloat64"
              },
              {
                "$ref": "#/definitions/AsynInt32"
              },
              {
                "$ref": "#/definitions/AsynLong"
              },
              {
                "$ref": "#/definitions/AsynMultiBitBinary"
              },
              {
                "$ref": "#/definitions/AsynString"
              },
              {
                "$ref": "#/definitions/AsynWaveform"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "children"
      ]
    }
  }
}