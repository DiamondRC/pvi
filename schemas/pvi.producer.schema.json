{
  "allOf": [
    {
      "$ref": "#/definitions/Producer"
    }
  ],
  "definitions": {
    "Producer": {
      "$ref": "#/definitions/AsynProducer"
    },
    "AsynProducer": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "AsynProducer",
          "default": "AsynProducer"
        },
        "prefix": {
          "type": "string",
          "description": "The prefix for record names created by the template file"
        },
        "label": {
          "type": "string",
          "description": "Screen title"
        },
        "asyn_port": {
          "type": "string",
          "description": "The asyn port name"
        },
        "address": {
          "type": "string",
          "description": "The asyn address"
        },
        "timeout": {
          "type": "string",
          "description": "The timeout for the asyn port"
        },
        "parent_class": {
          "type": "string",
          "description": "The parent class for the ParamSet.h",
          "default": "ADDriver"
        },
        "parameters": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/AsynParameter"
              },
              {
                "$ref": "#/definitions/AsynParameterGroup"
              }
            ]
          },
          "description": "The parameters to make into an IOC",
          "default": []
        }
      },
      "required": [
        "prefix",
        "label",
        "asyn_port",
        "address",
        "timeout"
      ],
      "additionalProperties": false
    },
    "AsynParameter": {
      "anyOf": [
        {
          "$ref": "#/definitions/AsynBinary"
        },
        {
          "$ref": "#/definitions/AsynFloat64"
        },
        {
          "$ref": "#/definitions/AsynInt32"
        },
        {
          "$ref": "#/definitions/AsynLong"
        },
        {
          "$ref": "#/definitions/AsynMultiBitBinary"
        },
        {
          "$ref": "#/definitions/AsynString"
        },
        {
          "$ref": "#/definitions/AsynWaveform"
        }
      ]
    },
    "AsynBinary": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "AsynBinary",
          "default": "AsynBinary"
        },
        "name": {
          "type": "string",
          "pattern": "([A-Z][a-z0-9]*)*$",
          "description": "PascalCase name to uniquely identify"
        },
        "description": {
          "type": "string",
          "description": "Description of what this Parameter is for"
        },
        "index_name": {
          "type": [
            "string",
            "null"
          ],
          "description": "Override name of index variable in source code (defaults to name)",
          "default": null
        },
        "drv_info": {
          "type": [
            "string",
            "null"
          ],
          "pattern": "^\\S{1,40}$",
          "description": "Info string for drvUserCreate for dynamically created parameters",
          "default": null
        },
        "access": {
          "type": "string",
          "enum": [
            "R",
            "W",
            "RW"
          ],
          "description": "What access does the user have. One of:\n\n    - R: Read only value that cannot be set. E.g. chipTemperature on a detector,\n      or isHomed for a motor\n    - W: Write only value that can be written to, but there is no current value.\n      E.g. reboot on a detector, or overwriteCurrentPosition for a motor\n    - RW: Read and Write value that can be written to and read back.\n      E.g. acquireTime on a detector, or velocity of a motor\n    ",
          "default": "RW"
        },
        "demand_auto_updates": {
          "type": "boolean",
          "description": "Should demand update when readback changes?",
          "default": false
        },
        "read_record_suffix": {
          "type": [
            "string",
            "null"
          ],
          "description": "The read record suffix, if not given then use $(name)_RBV",
          "default": null
        },
        "write_record_suffix": {
          "type": [
            "string",
            "null"
          ],
          "description": "The write record suffix, if not given then use $(name)",
          "default": null
        },
        "display_form": {
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "Default",
            "String",
            "Binary",
            "Decimal",
            "Hex",
            "Exponential",
            "Engineering"
          ],
          "description": "Display form for numeric/array fields",
          "default": null
        },
        "initial": {
          "type": [
            "null",
            "integer",
            "string"
          ],
          "minimum": 0,
          "maximum": 1,
          "pattern": "(\\$\\(\\w+=([0-1])\\))",
          "description": "The initial value of the parameter",
          "default": null
        },
        "read_widget": {
          "anyOf": [
            {
              "$ref": "#/definitions/ReadWidget"
            },
            {
              "type": "null"
            }
          ],
          "description": "Widget to use for read record",
          "default": {
            "type": "LED"
          }
        },
        "write_widget": {
          "anyOf": [
            {
              "$ref": "#/definitions/WriteWidget"
            },
            {
              "type": "null"
            }
          ],
          "description": "Widget to use for write record",
          "default": {
            "type": "CheckBox"
          }
        },
        "record_fields": {
          "description": "Binary record fields",
          "allOf": [
            {
              "$ref": "#/definitions/bi_bo"
            }
          ]
        }
      },
      "required": [
        "name",
        "description"
      ],
      "additionalProperties": false
    },
    "ReadWidget": {
      "anyOf": [
        {
          "$ref": "#/definitions/LED"
        },
        {
          "$ref": "#/definitions/BitField"
        },
        {
          "$ref": "#/definitions/ProgressBar"
        },
        {
          "$ref": "#/definitions/TextRead"
        },
        {
          "$ref": "#/definitions/ArrayTrace"
        },
        {
          "$ref": "#/definitions/TableRead"
        },
        {
          "$ref": "#/definitions/ImageRead"
        }
      ]
    },
    "LED": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "LED",
          "default": "LED"
        }
      },
      "additionalProperties": false
    },
    "BitField": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "BitField",
          "default": "BitField"
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Label for each bit"
        }
      },
      "required": [
        "labels"
      ],
      "additionalProperties": false
    },
    "ProgressBar": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "ProgressBar",
          "default": "ProgressBar"
        }
      },
      "additionalProperties": false
    },
    "TextRead": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "TextRead",
          "default": "TextRead"
        },
        "lines": {
          "type": "integer",
          "description": "Number of lines to display",
          "default": 1
        }
      },
      "additionalProperties": false
    },
    "ArrayTrace": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "ArrayTrace",
          "default": "ArrayTrace"
        },
        "axis": {
          "type": "string",
          "description": "Traces with same axis name will appear on same axis, plotted against 'x' trace if it exists, or indexes if not. Only one traces with axis='x' allowed."
        }
      },
      "required": [
        "axis"
      ],
      "additionalProperties": false
    },
    "TableRead": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "TableRead",
          "default": "TableRead"
        },
        "widgets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReadWidget"
          },
          "description": "For each column, what widget should be repeated for every row"
        }
      },
      "required": [
        "widgets"
      ],
      "additionalProperties": false
    },
    "ImageRead": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "ImageRead",
          "default": "ImageRead"
        }
      },
      "additionalProperties": false
    },
    "WriteWidget": {
      "anyOf": [
        {
          "$ref": "#/definitions/CheckBox"
        },
        {
          "$ref": "#/definitions/ComboBox"
        },
        {
          "$ref": "#/definitions/TextWrite"
        },
        {
          "$ref": "#/definitions/ArrayWrite"
        },
        {
          "$ref": "#/definitions/TableWrite"
        }
      ]
    },
    "CheckBox": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "CheckBox",
          "default": "CheckBox"
        }
      },
      "additionalProperties": false
    },
    "ComboBox": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "ComboBox",
          "default": "ComboBox"
        }
      },
      "additionalProperties": false
    },
    "TextWrite": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "TextWrite",
          "default": "TextWrite"
        },
        "lines": {
          "type": "integer",
          "description": "Number of lines to display",
          "default": 1
        }
      },
      "additionalProperties": false
    },
    "ArrayWrite": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "ArrayWrite",
          "default": "ArrayWrite"
        },
        "widget": {
          "description": "What widget should be used for each item",
          "allOf": [
            {
              "$ref": "#/definitions/WriteWidget"
            }
          ]
        }
      },
      "required": [
        "widget"
      ],
      "additionalProperties": false
    },
    "TableWrite": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "TableWrite",
          "default": "TableWrite"
        },
        "widgets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WriteWidget"
          },
          "description": "For each column, what widget should be repeated for every row"
        }
      },
      "required": [
        "widgets"
      ],
      "additionalProperties": false
    },
    "bi_bo": {
      "type": "object",
      "properties": {
        "NAME": {
          "type": "string",
          "description": "Record Name"
        },
        "DESC": {
          "type": "string",
          "description": "Descriptor"
        },
        "ASG": {
          "type": "string",
          "description": "Access Security Group"
        },
        "SCAN": {
          "description": "Scan Mechanism",
          "allOf": [
            {
              "$ref": "#/definitions/biSCAN"
            }
          ]
        },
        "PINI": {
          "description": "Process at iocInit",
          "allOf": [
            {
              "$ref": "#/definitions/biPINI"
            }
          ]
        },
        "PHAS": {
          "type": "integer",
          "description": "Scan Phase"
        },
        "EVNT": {
          "type": "string",
          "description": "Event Name"
        },
        "TSE": {
          "type": "integer",
          "description": "Time Stamp Event"
        },
        "TSEL": {
          "type": "string",
          "description": "Time Stamp Link"
        },
        "DTYP": {
          "type": "string",
          "description": "Device Type"
        },
        "DISV": {
          "type": "integer",
          "description": "Disable Value"
        },
        "DISA": {
          "type": "integer",
          "description": "Disable"
        },
        "SDIS": {
          "type": "string",
          "description": "Scanning Disable"
        },
        "DISP": {
          "type": "integer",
          "description": "Disable putField"
        },
        "PROC": {
          "type": "integer",
          "description": "Force Processing"
        },
        "STAT": {
          "description": "Alarm Status",
          "allOf": [
            {
              "$ref": "#/definitions/biSTAT"
            }
          ]
        },
        "SEVR": {
          "description": "Alarm Severity",
          "allOf": [
            {
              "$ref": "#/definitions/biSEVR"
            }
          ]
        },
        "AMSG": {
          "type": "string",
          "description": "Alarm Message"
        },
        "NSTA": {
          "description": "New Alarm Status",
          "allOf": [
            {
              "$ref": "#/definitions/biNSTA"
            }
          ]
        },
        "NSEV": {
          "description": "New Alarm Severity",
          "allOf": [
            {
              "$ref": "#/definitions/biNSEV"
            }
          ]
        },
        "NAMSG": {
          "type": "string",
          "description": "New Alarm Message"
        },
        "ACKS": {
          "description": "Alarm Ack Severity",
          "allOf": [
            {
              "$ref": "#/definitions/biACKS"
            }
          ]
        },
        "ACKT": {
          "description": "Alarm Ack Transient",
          "allOf": [
            {
              "$ref": "#/definitions/biACKT"
            }
          ]
        },
        "DISS": {
          "description": "Disable Alarm Sevrty",
          "allOf": [
            {
              "$ref": "#/definitions/biDISS"
            }
          ]
        },
        "LCNT": {
          "type": "integer",
          "description": "Lock Count"
        },
        "PACT": {
          "type": "integer",
          "description": "Record active"
        },
        "PUTF": {
          "type": "integer",
          "description": "dbPutField process"
        },
        "RPRO": {
          "type": "integer",
          "description": "Reprocess "
        },
        "PRIO": {
          "description": "Scheduling Priority",
          "allOf": [
            {
              "$ref": "#/definitions/biPRIO"
            }
          ]
        },
        "TPRO": {
          "type": "integer",
          "description": "Trace Processing"
        },
        "UDF": {
          "type": "integer",
          "description": "Undefined"
        },
        "UDFS": {
          "description": "Undefined Alarm Sevrty",
          "allOf": [
            {
              "$ref": "#/definitions/biUDFS"
            }
          ]
        },
        "UTAG": {
          "type": "integer",
          "description": "Time Tag"
        },
        "FLNK": {
          "type": "string",
          "description": "Forward Process Link"
        },
        "VAL": {
          "type": "string",
          "description": "Current Value"
        },
        "ZNAM": {
          "type": "string",
          "description": "Zero Name"
        },
        "ONAM": {
          "type": "string",
          "description": "One Name"
        },
        "RVAL": {
          "type": "integer",
          "description": "Raw Value"
        },
        "ORAW": {
          "type": "integer",
          "description": "prev Raw Value"
        },
        "MASK": {
          "type": "integer",
          "description": "Hardware Mask"
        },
        "ZSV": {
          "description": "Zero Error Severity",
          "allOf": [
            {
              "$ref": "#/definitions/biZSV"
            }
          ]
        },
        "OSV": {
          "description": "One Error Severity",
          "allOf": [
            {
              "$ref": "#/definitions/biOSV"
            }
          ]
        },
        "COSV": {
          "description": "Change of State Svr",
          "allOf": [
            {
              "$ref": "#/definitions/biCOSV"
            }
          ]
        },
        "MLST": {
          "type": "integer",
          "description": "Last Value Monitored"
        },
        "LALM": {
          "type": "integer",
          "description": "Last Value Alarmed"
        },
        "SIOL": {
          "type": "string",
          "description": "Simulation Input Link"
        },
        "SIML": {
          "type": "string",
          "description": "Simulation Mode Link"
        },
        "SIMM": {
          "description": "Simulation Mode",
          "allOf": [
            {
              "$ref": "#/definitions/biSIMM"
            }
          ]
        },
        "SIMS": {
          "description": "Simulation Mode Severity",
          "allOf": [
            {
              "$ref": "#/definitions/biSIMS"
            }
          ]
        },
        "OLDSIMM": {
          "description": "Prev. Simulation Mode",
          "allOf": [
            {
              "$ref": "#/definitions/biOLDSIMM"
            }
          ]
        },
        "SSCN": {
          "description": "Sim. Mode Scan",
          "allOf": [
            {
              "$ref": "#/definitions/biSSCN"
            }
          ]
        },
        "SDLY": {
          "type": "number",
          "description": "Sim. Mode Async Delay"
        },
        "INP": {
          "type": "string",
          "description": "Input Specification"
        },
        "SVAL": {
          "type": "integer",
          "description": "Simulation Value"
        }
      },
      "additionalProperties": false
    },
    "biSCAN": {
      "type": "string",
      "enum": [
        "Passive",
        "Event",
        "I/O Intr",
        "10 second",
        "5 second",
        "2 second",
        "1 second",
        ".5 second",
        ".2 second",
        ".1 second"
      ]
    },
    "biPINI": {
      "type": "string",
      "enum": [
        "NO",
        "YES",
        "RUN",
        "RUNNING",
        "PAUSE",
        "PAUSED"
      ]
    },
    "biSTAT": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "READ",
        "WRITE",
        "HIHI",
        "HIGH",
        "LOLO",
        "LOW",
        "STATE",
        "COS",
        "COMM",
        "TIMEOUT",
        "HWLIMIT",
        "CALC",
        "SCAN",
        "LINK",
        "SOFT",
        "BAD_SUB",
        "UDF",
        "DISABLE",
        "SIMM",
        "READ_ACCESS",
        "WRITE_ACCESS"
      ]
    },
    "biSEVR": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "biNSTA": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "READ",
        "WRITE",
        "HIHI",
        "HIGH",
        "LOLO",
        "LOW",
        "STATE",
        "COS",
        "COMM",
        "TIMEOUT",
        "HWLIMIT",
        "CALC",
        "SCAN",
        "LINK",
        "SOFT",
        "BAD_SUB",
        "UDF",
        "DISABLE",
        "SIMM",
        "READ_ACCESS",
        "WRITE_ACCESS"
      ]
    },
    "biNSEV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "biACKS": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "biACKT": {
      "type": "string",
      "enum": [
        "NO",
        "YES"
      ]
    },
    "biDISS": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "biPRIO": {
      "type": "string",
      "enum": [
        "LOW",
        "MEDIUM",
        "HIGH"
      ]
    },
    "biUDFS": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "biZSV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "biOSV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "biCOSV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "biSIMM": {
      "type": "string",
      "enum": [
        "NO",
        "YES",
        "RAW"
      ]
    },
    "biSIMS": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "biOLDSIMM": {
      "type": "string",
      "enum": [
        "NO",
        "YES",
        "RAW"
      ]
    },
    "biSSCN": {
      "type": "string",
      "enum": [
        "Passive",
        "Event",
        "I/O Intr",
        "10 second",
        "5 second",
        "2 second",
        "1 second",
        ".5 second",
        ".2 second",
        ".1 second"
      ]
    },
    "AsynFloat64": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "AsynFloat64",
          "default": "AsynFloat64"
        },
        "name": {
          "type": "string",
          "pattern": "([A-Z][a-z0-9]*)*$",
          "description": "PascalCase name to uniquely identify"
        },
        "description": {
          "type": "string",
          "description": "Description of what this Parameter is for"
        },
        "index_name": {
          "type": [
            "string",
            "null"
          ],
          "description": "Override name of index variable in source code (defaults to name)",
          "default": null
        },
        "drv_info": {
          "type": [
            "string",
            "null"
          ],
          "pattern": "^\\S{1,40}$",
          "description": "Info string for drvUserCreate for dynamically created parameters",
          "default": null
        },
        "access": {
          "type": "string",
          "enum": [
            "R",
            "W",
            "RW"
          ],
          "description": "What access does the user have. One of:\n\n    - R: Read only value that cannot be set. E.g. chipTemperature on a detector,\n      or isHomed for a motor\n    - W: Write only value that can be written to, but there is no current value.\n      E.g. reboot on a detector, or overwriteCurrentPosition for a motor\n    - RW: Read and Write value that can be written to and read back.\n      E.g. acquireTime on a detector, or velocity of a motor\n    ",
          "default": "RW"
        },
        "demand_auto_updates": {
          "type": "boolean",
          "description": "Should demand update when readback changes?",
          "default": false
        },
        "read_record_suffix": {
          "type": [
            "string",
            "null"
          ],
          "description": "The read record suffix, if not given then use $(name)_RBV",
          "default": null
        },
        "write_record_suffix": {
          "type": [
            "string",
            "null"
          ],
          "description": "The write record suffix, if not given then use $(name)",
          "default": null
        },
        "display_form": {
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "Default",
            "String",
            "Binary",
            "Decimal",
            "Hex",
            "Exponential",
            "Engineering"
          ],
          "description": "Display form for numeric/array fields",
          "default": null
        },
        "initial": {
          "type": [
            "null",
            "number",
            "string"
          ],
          "pattern": "(\\$\\(\\w+=(-?[0-9]+(\\.[0-9]+)?)\\))",
          "description": "The initial value of the parameter",
          "default": null
        },
        "read_widget": {
          "anyOf": [
            {
              "$ref": "#/definitions/ReadWidget"
            },
            {
              "type": "null"
            }
          ],
          "description": "Widget to use for read record",
          "default": {
            "type": "TextRead",
            "lines": 1
          }
        },
        "write_widget": {
          "anyOf": [
            {
              "$ref": "#/definitions/WriteWidget"
            },
            {
              "type": "null"
            }
          ],
          "description": "Widget to use for write record",
          "default": {
            "type": "TextWrite",
            "lines": 1
          }
        },
        "record_fields": {
          "description": "Analogue record fields",
          "allOf": [
            {
              "$ref": "#/definitions/ai_ao"
            }
          ]
        }
      },
      "required": [
        "name",
        "description"
      ],
      "additionalProperties": false
    },
    "ai_ao": {
      "type": "object",
      "properties": {
        "NAME": {
          "type": "string",
          "description": "Record Name"
        },
        "DESC": {
          "type": "string",
          "description": "Descriptor"
        },
        "ASG": {
          "type": "string",
          "description": "Access Security Group"
        },
        "SCAN": {
          "description": "Scan Mechanism",
          "allOf": [
            {
              "$ref": "#/definitions/aiSCAN"
            }
          ]
        },
        "PINI": {
          "description": "Process at iocInit",
          "allOf": [
            {
              "$ref": "#/definitions/aiPINI"
            }
          ]
        },
        "PHAS": {
          "type": "integer",
          "description": "Scan Phase"
        },
        "EVNT": {
          "type": "string",
          "description": "Event Name"
        },
        "TSE": {
          "type": "integer",
          "description": "Time Stamp Event"
        },
        "TSEL": {
          "type": "string",
          "description": "Time Stamp Link"
        },
        "DTYP": {
          "type": "string",
          "description": "Device Type"
        },
        "DISV": {
          "type": "integer",
          "description": "Disable Value"
        },
        "DISA": {
          "type": "integer",
          "description": "Disable"
        },
        "SDIS": {
          "type": "string",
          "description": "Scanning Disable"
        },
        "DISP": {
          "type": "integer",
          "description": "Disable putField"
        },
        "PROC": {
          "type": "integer",
          "description": "Force Processing"
        },
        "STAT": {
          "description": "Alarm Status",
          "allOf": [
            {
              "$ref": "#/definitions/aiSTAT"
            }
          ]
        },
        "SEVR": {
          "description": "Alarm Severity",
          "allOf": [
            {
              "$ref": "#/definitions/aiSEVR"
            }
          ]
        },
        "AMSG": {
          "type": "string",
          "description": "Alarm Message"
        },
        "NSTA": {
          "description": "New Alarm Status",
          "allOf": [
            {
              "$ref": "#/definitions/aiNSTA"
            }
          ]
        },
        "NSEV": {
          "description": "New Alarm Severity",
          "allOf": [
            {
              "$ref": "#/definitions/aiNSEV"
            }
          ]
        },
        "NAMSG": {
          "type": "string",
          "description": "New Alarm Message"
        },
        "ACKS": {
          "description": "Alarm Ack Severity",
          "allOf": [
            {
              "$ref": "#/definitions/aiACKS"
            }
          ]
        },
        "ACKT": {
          "description": "Alarm Ack Transient",
          "allOf": [
            {
              "$ref": "#/definitions/aiACKT"
            }
          ]
        },
        "DISS": {
          "description": "Disable Alarm Sevrty",
          "allOf": [
            {
              "$ref": "#/definitions/aiDISS"
            }
          ]
        },
        "LCNT": {
          "type": "integer",
          "description": "Lock Count"
        },
        "PACT": {
          "type": "integer",
          "description": "Record active"
        },
        "PUTF": {
          "type": "integer",
          "description": "dbPutField process"
        },
        "RPRO": {
          "type": "integer",
          "description": "Reprocess "
        },
        "PRIO": {
          "description": "Scheduling Priority",
          "allOf": [
            {
              "$ref": "#/definitions/aiPRIO"
            }
          ]
        },
        "TPRO": {
          "type": "integer",
          "description": "Trace Processing"
        },
        "UDF": {
          "type": "integer",
          "description": "Undefined"
        },
        "UDFS": {
          "description": "Undefined Alarm Sevrty",
          "allOf": [
            {
              "$ref": "#/definitions/aiUDFS"
            }
          ]
        },
        "UTAG": {
          "type": "integer",
          "description": "Time Tag"
        },
        "FLNK": {
          "type": "string",
          "description": "Forward Process Link"
        },
        "VAL": {
          "type": "number",
          "description": "Current EGU Value"
        },
        "PREC": {
          "type": "integer",
          "description": "Display Precision"
        },
        "LINR": {
          "description": "Linearization",
          "allOf": [
            {
              "$ref": "#/definitions/aiLINR"
            }
          ]
        },
        "EGUF": {
          "type": "number",
          "description": "Engineer Units Full"
        },
        "EGUL": {
          "type": "number",
          "description": "Engineer Units Low"
        },
        "EGU": {
          "type": "string",
          "description": "Engineering Units"
        },
        "ROFF": {
          "type": "integer",
          "description": "Raw Offset"
        },
        "EOFF": {
          "type": "number",
          "description": "Raw to EGU Offset"
        },
        "ESLO": {
          "type": "number",
          "description": "Raw to EGU Slope"
        },
        "HOPR": {
          "type": "number",
          "description": "High Operating Range"
        },
        "LOPR": {
          "type": "number",
          "description": "Low Operating Range"
        },
        "AOFF": {
          "type": "number",
          "description": "Adjustment Offset"
        },
        "ASLO": {
          "type": "number",
          "description": "Adjustment Slope"
        },
        "HIHI": {
          "type": "number",
          "description": "Hihi Alarm Limit"
        },
        "LOLO": {
          "type": "number",
          "description": "Lolo Alarm Limit"
        },
        "HIGH": {
          "type": "number",
          "description": "High Alarm Limit"
        },
        "LOW": {
          "type": "number",
          "description": "Low Alarm Limit"
        },
        "HHSV": {
          "description": "Hihi Severity",
          "allOf": [
            {
              "$ref": "#/definitions/aiHHSV"
            }
          ]
        },
        "LLSV": {
          "description": "Lolo Severity",
          "allOf": [
            {
              "$ref": "#/definitions/aiLLSV"
            }
          ]
        },
        "HSV": {
          "description": "High Severity",
          "allOf": [
            {
              "$ref": "#/definitions/aiHSV"
            }
          ]
        },
        "LSV": {
          "description": "Low Severity",
          "allOf": [
            {
              "$ref": "#/definitions/aiLSV"
            }
          ]
        },
        "HYST": {
          "type": "number",
          "description": "Alarm Deadband"
        },
        "ADEL": {
          "type": "number",
          "description": "Archive Deadband"
        },
        "MDEL": {
          "type": "number",
          "description": "Monitor Deadband"
        },
        "RVAL": {
          "type": "integer",
          "description": "Current Raw Value"
        },
        "ORAW": {
          "type": "integer",
          "description": "Previous Raw Value"
        },
        "LALM": {
          "type": "number",
          "description": "Last Value Alarmed"
        },
        "ALST": {
          "type": "number",
          "description": "Last Value Archived"
        },
        "MLST": {
          "type": "number",
          "description": "Last Val Monitored"
        },
        "INIT": {
          "type": "integer",
          "description": "Initialized?"
        },
        "LBRK": {
          "type": "integer",
          "description": "LastBreak Point"
        },
        "SIOL": {
          "type": "string",
          "description": "Simulation Input Link"
        },
        "SIML": {
          "type": "string",
          "description": "Simulation Mode Link"
        },
        "SIMM": {
          "description": "Simulation Mode",
          "allOf": [
            {
              "$ref": "#/definitions/aiSIMM"
            }
          ]
        },
        "SIMS": {
          "description": "Simulation Mode Severity",
          "allOf": [
            {
              "$ref": "#/definitions/aiSIMS"
            }
          ]
        },
        "OLDSIMM": {
          "description": "Prev. Simulation Mode",
          "allOf": [
            {
              "$ref": "#/definitions/aiOLDSIMM"
            }
          ]
        },
        "SSCN": {
          "description": "Sim. Mode Scan",
          "allOf": [
            {
              "$ref": "#/definitions/aiSSCN"
            }
          ]
        },
        "SDLY": {
          "type": "number",
          "description": "Sim. Mode Async Delay"
        },
        "INP": {
          "type": "string",
          "description": "Input Specification"
        },
        "SMOO": {
          "type": "number",
          "description": "Smoothing"
        },
        "AFTC": {
          "type": "number",
          "description": "Alarm Filter Time Constant"
        },
        "AFVL": {
          "type": "number",
          "description": "Alarm Filter Value"
        },
        "SVAL": {
          "type": "number",
          "description": "Simulation Value"
        }
      },
      "additionalProperties": false
    },
    "aiSCAN": {
      "type": "string",
      "enum": [
        "Passive",
        "Event",
        "I/O Intr",
        "10 second",
        "5 second",
        "2 second",
        "1 second",
        ".5 second",
        ".2 second",
        ".1 second"
      ]
    },
    "aiPINI": {
      "type": "string",
      "enum": [
        "NO",
        "YES",
        "RUN",
        "RUNNING",
        "PAUSE",
        "PAUSED"
      ]
    },
    "aiSTAT": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "READ",
        "WRITE",
        "HIHI",
        "HIGH",
        "LOLO",
        "LOW",
        "STATE",
        "COS",
        "COMM",
        "TIMEOUT",
        "HWLIMIT",
        "CALC",
        "SCAN",
        "LINK",
        "SOFT",
        "BAD_SUB",
        "UDF",
        "DISABLE",
        "SIMM",
        "READ_ACCESS",
        "WRITE_ACCESS"
      ]
    },
    "aiSEVR": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "aiNSTA": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "READ",
        "WRITE",
        "HIHI",
        "HIGH",
        "LOLO",
        "LOW",
        "STATE",
        "COS",
        "COMM",
        "TIMEOUT",
        "HWLIMIT",
        "CALC",
        "SCAN",
        "LINK",
        "SOFT",
        "BAD_SUB",
        "UDF",
        "DISABLE",
        "SIMM",
        "READ_ACCESS",
        "WRITE_ACCESS"
      ]
    },
    "aiNSEV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "aiACKS": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "aiACKT": {
      "type": "string",
      "enum": [
        "NO",
        "YES"
      ]
    },
    "aiDISS": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "aiPRIO": {
      "type": "string",
      "enum": [
        "LOW",
        "MEDIUM",
        "HIGH"
      ]
    },
    "aiUDFS": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "aiLINR": {
      "type": "string",
      "enum": [
        "NO CONVERSION",
        "SLOPE",
        "LINEAR",
        "typeKdegF",
        "typeKdegC",
        "typeJdegF",
        "typeJdegC",
        "typeEdegF(ixe only)",
        "typeEdegC(ixe only)",
        "typeTdegF",
        "typeTdegC",
        "typeRdegF",
        "typeRdegC",
        "typeSdegF",
        "typeSdegC"
      ]
    },
    "aiHHSV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "aiLLSV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "aiHSV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "aiLSV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "aiSIMM": {
      "type": "string",
      "enum": [
        "NO",
        "YES",
        "RAW"
      ]
    },
    "aiSIMS": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "aiOLDSIMM": {
      "type": "string",
      "enum": [
        "NO",
        "YES",
        "RAW"
      ]
    },
    "aiSSCN": {
      "type": "string",
      "enum": [
        "Passive",
        "Event",
        "I/O Intr",
        "10 second",
        "5 second",
        "2 second",
        "1 second",
        ".5 second",
        ".2 second",
        ".1 second"
      ]
    },
    "AsynInt32": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "AsynInt32",
          "default": "AsynInt32"
        },
        "name": {
          "type": "string",
          "pattern": "([A-Z][a-z0-9]*)*$",
          "description": "PascalCase name to uniquely identify"
        },
        "description": {
          "type": "string",
          "description": "Description of what this Parameter is for"
        },
        "index_name": {
          "type": [
            "string",
            "null"
          ],
          "description": "Override name of index variable in source code (defaults to name)",
          "default": null
        },
        "drv_info": {
          "type": [
            "string",
            "null"
          ],
          "pattern": "^\\S{1,40}$",
          "description": "Info string for drvUserCreate for dynamically created parameters",
          "default": null
        },
        "access": {
          "type": "string",
          "enum": [
            "R",
            "W",
            "RW"
          ],
          "description": "What access does the user have. One of:\n\n    - R: Read only value that cannot be set. E.g. chipTemperature on a detector,\n      or isHomed for a motor\n    - W: Write only value that can be written to, but there is no current value.\n      E.g. reboot on a detector, or overwriteCurrentPosition for a motor\n    - RW: Read and Write value that can be written to and read back.\n      E.g. acquireTime on a detector, or velocity of a motor\n    ",
          "default": "RW"
        },
        "demand_auto_updates": {
          "type": "boolean",
          "description": "Should demand update when readback changes?",
          "default": false
        },
        "read_record_suffix": {
          "type": [
            "string",
            "null"
          ],
          "description": "The read record suffix, if not given then use $(name)_RBV",
          "default": null
        },
        "write_record_suffix": {
          "type": [
            "string",
            "null"
          ],
          "description": "The write record suffix, if not given then use $(name)",
          "default": null
        },
        "display_form": {
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "Default",
            "String",
            "Binary",
            "Decimal",
            "Hex",
            "Exponential",
            "Engineering"
          ],
          "description": "Display form for numeric/array fields",
          "default": null
        },
        "initial": {
          "type": [
            "null",
            "integer",
            "string"
          ],
          "pattern": "(\\$\\(\\w+=(-?\\d+)\\))",
          "description": "The initial value of the parameter",
          "default": null
        },
        "read_widget": {
          "anyOf": [
            {
              "$ref": "#/definitions/ReadWidget"
            },
            {
              "type": "null"
            }
          ],
          "description": "Widget to use for read record",
          "default": {
            "type": "TextRead",
            "lines": 1
          }
        },
        "write_widget": {
          "anyOf": [
            {
              "$ref": "#/definitions/WriteWidget"
            },
            {
              "type": "null"
            }
          ],
          "description": "Widget to use for write record",
          "default": {
            "type": "TextWrite",
            "lines": 1
          }
        },
        "record_fields": {
          "description": "Analogue record fields",
          "allOf": [
            {
              "$ref": "#/definitions/ai_ao"
            }
          ]
        }
      },
      "required": [
        "name",
        "description"
      ],
      "additionalProperties": false
    },
    "AsynLong": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "AsynLong",
          "default": "AsynLong"
        },
        "name": {
          "type": "string",
          "pattern": "([A-Z][a-z0-9]*)*$",
          "description": "PascalCase name to uniquely identify"
        },
        "description": {
          "type": "string",
          "description": "Description of what this Parameter is for"
        },
        "index_name": {
          "type": [
            "string",
            "null"
          ],
          "description": "Override name of index variable in source code (defaults to name)",
          "default": null
        },
        "drv_info": {
          "type": [
            "string",
            "null"
          ],
          "pattern": "^\\S{1,40}$",
          "description": "Info string for drvUserCreate for dynamically created parameters",
          "default": null
        },
        "access": {
          "type": "string",
          "enum": [
            "R",
            "W",
            "RW"
          ],
          "description": "What access does the user have. One of:\n\n    - R: Read only value that cannot be set. E.g. chipTemperature on a detector,\n      or isHomed for a motor\n    - W: Write only value that can be written to, but there is no current value.\n      E.g. reboot on a detector, or overwriteCurrentPosition for a motor\n    - RW: Read and Write value that can be written to and read back.\n      E.g. acquireTime on a detector, or velocity of a motor\n    ",
          "default": "RW"
        },
        "demand_auto_updates": {
          "type": "boolean",
          "description": "Should demand update when readback changes?",
          "default": false
        },
        "read_record_suffix": {
          "type": [
            "string",
            "null"
          ],
          "description": "The read record suffix, if not given then use $(name)_RBV",
          "default": null
        },
        "write_record_suffix": {
          "type": [
            "string",
            "null"
          ],
          "description": "The write record suffix, if not given then use $(name)",
          "default": null
        },
        "display_form": {
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "Default",
            "String",
            "Binary",
            "Decimal",
            "Hex",
            "Exponential",
            "Engineering"
          ],
          "description": "Display form for numeric/array fields",
          "default": null
        },
        "initial": {
          "type": [
            "null",
            "integer",
            "string"
          ],
          "pattern": "(\\$\\(\\w+=(-?\\d+)\\))",
          "description": "The initial value of the parameter",
          "default": null
        },
        "read_widget": {
          "anyOf": [
            {
              "$ref": "#/definitions/ReadWidget"
            },
            {
              "type": "null"
            }
          ],
          "description": "Widget to use for read record",
          "default": {
            "type": "TextRead",
            "lines": 1
          }
        },
        "write_widget": {
          "anyOf": [
            {
              "$ref": "#/definitions/WriteWidget"
            },
            {
              "type": "null"
            }
          ],
          "description": "Widget to use for write record",
          "default": {
            "type": "TextWrite",
            "lines": 1
          }
        },
        "record_fields": {
          "description": "Long record fields",
          "allOf": [
            {
              "$ref": "#/definitions/longin_longout"
            }
          ]
        }
      },
      "required": [
        "name",
        "description"
      ],
      "additionalProperties": false
    },
    "longin_longout": {
      "type": "object",
      "properties": {
        "NAME": {
          "type": "string",
          "description": "Record Name"
        },
        "DESC": {
          "type": "string",
          "description": "Descriptor"
        },
        "ASG": {
          "type": "string",
          "description": "Access Security Group"
        },
        "SCAN": {
          "description": "Scan Mechanism",
          "allOf": [
            {
              "$ref": "#/definitions/longinSCAN"
            }
          ]
        },
        "PINI": {
          "description": "Process at iocInit",
          "allOf": [
            {
              "$ref": "#/definitions/longinPINI"
            }
          ]
        },
        "PHAS": {
          "type": "integer",
          "description": "Scan Phase"
        },
        "EVNT": {
          "type": "string",
          "description": "Event Name"
        },
        "TSE": {
          "type": "integer",
          "description": "Time Stamp Event"
        },
        "TSEL": {
          "type": "string",
          "description": "Time Stamp Link"
        },
        "DTYP": {
          "type": "string",
          "description": "Device Type"
        },
        "DISV": {
          "type": "integer",
          "description": "Disable Value"
        },
        "DISA": {
          "type": "integer",
          "description": "Disable"
        },
        "SDIS": {
          "type": "string",
          "description": "Scanning Disable"
        },
        "DISP": {
          "type": "integer",
          "description": "Disable putField"
        },
        "PROC": {
          "type": "integer",
          "description": "Force Processing"
        },
        "STAT": {
          "description": "Alarm Status",
          "allOf": [
            {
              "$ref": "#/definitions/longinSTAT"
            }
          ]
        },
        "SEVR": {
          "description": "Alarm Severity",
          "allOf": [
            {
              "$ref": "#/definitions/longinSEVR"
            }
          ]
        },
        "AMSG": {
          "type": "string",
          "description": "Alarm Message"
        },
        "NSTA": {
          "description": "New Alarm Status",
          "allOf": [
            {
              "$ref": "#/definitions/longinNSTA"
            }
          ]
        },
        "NSEV": {
          "description": "New Alarm Severity",
          "allOf": [
            {
              "$ref": "#/definitions/longinNSEV"
            }
          ]
        },
        "NAMSG": {
          "type": "string",
          "description": "New Alarm Message"
        },
        "ACKS": {
          "description": "Alarm Ack Severity",
          "allOf": [
            {
              "$ref": "#/definitions/longinACKS"
            }
          ]
        },
        "ACKT": {
          "description": "Alarm Ack Transient",
          "allOf": [
            {
              "$ref": "#/definitions/longinACKT"
            }
          ]
        },
        "DISS": {
          "description": "Disable Alarm Sevrty",
          "allOf": [
            {
              "$ref": "#/definitions/longinDISS"
            }
          ]
        },
        "LCNT": {
          "type": "integer",
          "description": "Lock Count"
        },
        "PACT": {
          "type": "integer",
          "description": "Record active"
        },
        "PUTF": {
          "type": "integer",
          "description": "dbPutField process"
        },
        "RPRO": {
          "type": "integer",
          "description": "Reprocess "
        },
        "PRIO": {
          "description": "Scheduling Priority",
          "allOf": [
            {
              "$ref": "#/definitions/longinPRIO"
            }
          ]
        },
        "TPRO": {
          "type": "integer",
          "description": "Trace Processing"
        },
        "UDF": {
          "type": "integer",
          "description": "Undefined"
        },
        "UDFS": {
          "description": "Undefined Alarm Sevrty",
          "allOf": [
            {
              "$ref": "#/definitions/longinUDFS"
            }
          ]
        },
        "UTAG": {
          "type": "integer",
          "description": "Time Tag"
        },
        "FLNK": {
          "type": "string",
          "description": "Forward Process Link"
        },
        "VAL": {
          "type": "integer",
          "description": "Current value"
        },
        "EGU": {
          "type": "string",
          "description": "Engineering Units"
        },
        "HOPR": {
          "type": "integer",
          "description": "High Operating Range"
        },
        "LOPR": {
          "type": "integer",
          "description": "Low Operating Range"
        },
        "HIHI": {
          "type": "integer",
          "description": "Hihi Alarm Limit"
        },
        "LOLO": {
          "type": "integer",
          "description": "Lolo Alarm Limit"
        },
        "HIGH": {
          "type": "integer",
          "description": "High Alarm Limit"
        },
        "LOW": {
          "type": "integer",
          "description": "Low Alarm Limit"
        },
        "HHSV": {
          "description": "Hihi Severity",
          "allOf": [
            {
              "$ref": "#/definitions/longinHHSV"
            }
          ]
        },
        "LLSV": {
          "description": "Lolo Severity",
          "allOf": [
            {
              "$ref": "#/definitions/longinLLSV"
            }
          ]
        },
        "HSV": {
          "description": "High Severity",
          "allOf": [
            {
              "$ref": "#/definitions/longinHSV"
            }
          ]
        },
        "LSV": {
          "description": "Low Severity",
          "allOf": [
            {
              "$ref": "#/definitions/longinLSV"
            }
          ]
        },
        "HYST": {
          "type": "integer",
          "description": "Alarm Deadband"
        },
        "ADEL": {
          "type": "integer",
          "description": "Archive Deadband"
        },
        "MDEL": {
          "type": "integer",
          "description": "Monitor Deadband"
        },
        "LALM": {
          "type": "integer",
          "description": "Last Value Alarmed"
        },
        "ALST": {
          "type": "integer",
          "description": "Last Value Archived"
        },
        "MLST": {
          "type": "integer",
          "description": "Last Val Monitored"
        },
        "SIOL": {
          "type": "string",
          "description": "Sim Input Specifctn"
        },
        "SIML": {
          "type": "string",
          "description": "Sim Mode Location"
        },
        "SIMM": {
          "description": "Simulation Mode",
          "allOf": [
            {
              "$ref": "#/definitions/longinSIMM"
            }
          ]
        },
        "SIMS": {
          "description": "Sim mode Alarm Svrty",
          "allOf": [
            {
              "$ref": "#/definitions/longinSIMS"
            }
          ]
        },
        "OLDSIMM": {
          "description": "Prev. Simulation Mode",
          "allOf": [
            {
              "$ref": "#/definitions/longinOLDSIMM"
            }
          ]
        },
        "SSCN": {
          "description": "Sim. Mode Scan",
          "allOf": [
            {
              "$ref": "#/definitions/longinSSCN"
            }
          ]
        },
        "SDLY": {
          "type": "number",
          "description": "Sim. Mode Async Delay"
        },
        "INP": {
          "type": "string",
          "description": "Input Specification"
        },
        "AFTC": {
          "type": "number",
          "description": "Alarm Filter Time Constant"
        },
        "AFVL": {
          "type": "number",
          "description": "Alarm Filter Value"
        },
        "SVAL": {
          "type": "integer",
          "description": "Simulation Value"
        }
      },
      "additionalProperties": false
    },
    "longinSCAN": {
      "type": "string",
      "enum": [
        "Passive",
        "Event",
        "I/O Intr",
        "10 second",
        "5 second",
        "2 second",
        "1 second",
        ".5 second",
        ".2 second",
        ".1 second"
      ]
    },
    "longinPINI": {
      "type": "string",
      "enum": [
        "NO",
        "YES",
        "RUN",
        "RUNNING",
        "PAUSE",
        "PAUSED"
      ]
    },
    "longinSTAT": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "READ",
        "WRITE",
        "HIHI",
        "HIGH",
        "LOLO",
        "LOW",
        "STATE",
        "COS",
        "COMM",
        "TIMEOUT",
        "HWLIMIT",
        "CALC",
        "SCAN",
        "LINK",
        "SOFT",
        "BAD_SUB",
        "UDF",
        "DISABLE",
        "SIMM",
        "READ_ACCESS",
        "WRITE_ACCESS"
      ]
    },
    "longinSEVR": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "longinNSTA": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "READ",
        "WRITE",
        "HIHI",
        "HIGH",
        "LOLO",
        "LOW",
        "STATE",
        "COS",
        "COMM",
        "TIMEOUT",
        "HWLIMIT",
        "CALC",
        "SCAN",
        "LINK",
        "SOFT",
        "BAD_SUB",
        "UDF",
        "DISABLE",
        "SIMM",
        "READ_ACCESS",
        "WRITE_ACCESS"
      ]
    },
    "longinNSEV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "longinACKS": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "longinACKT": {
      "type": "string",
      "enum": [
        "NO",
        "YES"
      ]
    },
    "longinDISS": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "longinPRIO": {
      "type": "string",
      "enum": [
        "LOW",
        "MEDIUM",
        "HIGH"
      ]
    },
    "longinUDFS": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "longinHHSV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "longinLLSV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "longinHSV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "longinLSV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "longinSIMM": {
      "type": "string",
      "enum": [
        "NO",
        "YES"
      ]
    },
    "longinSIMS": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "longinOLDSIMM": {
      "type": "string",
      "enum": [
        "NO",
        "YES",
        "RAW"
      ]
    },
    "longinSSCN": {
      "type": "string",
      "enum": [
        "Passive",
        "Event",
        "I/O Intr",
        "10 second",
        "5 second",
        "2 second",
        "1 second",
        ".5 second",
        ".2 second",
        ".1 second"
      ]
    },
    "AsynMultiBitBinary": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "AsynMultiBitBinary",
          "default": "AsynMultiBitBinary"
        },
        "name": {
          "type": "string",
          "pattern": "([A-Z][a-z0-9]*)*$",
          "description": "PascalCase name to uniquely identify"
        },
        "description": {
          "type": "string",
          "description": "Description of what this Parameter is for"
        },
        "index_name": {
          "type": [
            "string",
            "null"
          ],
          "description": "Override name of index variable in source code (defaults to name)",
          "default": null
        },
        "drv_info": {
          "type": [
            "string",
            "null"
          ],
          "pattern": "^\\S{1,40}$",
          "description": "Info string for drvUserCreate for dynamically created parameters",
          "default": null
        },
        "access": {
          "type": "string",
          "enum": [
            "R",
            "W",
            "RW"
          ],
          "description": "What access does the user have. One of:\n\n    - R: Read only value that cannot be set. E.g. chipTemperature on a detector,\n      or isHomed for a motor\n    - W: Write only value that can be written to, but there is no current value.\n      E.g. reboot on a detector, or overwriteCurrentPosition for a motor\n    - RW: Read and Write value that can be written to and read back.\n      E.g. acquireTime on a detector, or velocity of a motor\n    ",
          "default": "RW"
        },
        "demand_auto_updates": {
          "type": "boolean",
          "description": "Should demand update when readback changes?",
          "default": false
        },
        "read_record_suffix": {
          "type": [
            "string",
            "null"
          ],
          "description": "The read record suffix, if not given then use $(name)_RBV",
          "default": null
        },
        "write_record_suffix": {
          "type": [
            "string",
            "null"
          ],
          "description": "The write record suffix, if not given then use $(name)",
          "default": null
        },
        "display_form": {
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "Default",
            "String",
            "Binary",
            "Decimal",
            "Hex",
            "Exponential",
            "Engineering"
          ],
          "description": "Display form for numeric/array fields",
          "default": null
        },
        "initial": {
          "type": [
            "null",
            "integer",
            "string"
          ],
          "minimum": 0,
          "maximum": 15,
          "pattern": "(\\$\\(\\w+=([0-15])\\))",
          "description": "The initial value of the parameter",
          "default": null
        },
        "read_widget": {
          "anyOf": [
            {
              "$ref": "#/definitions/ReadWidget"
            },
            {
              "type": "null"
            }
          ],
          "description": "Widget to use for read record",
          "default": {
            "type": "TextRead",
            "lines": 1
          }
        },
        "write_widget": {
          "anyOf": [
            {
              "$ref": "#/definitions/WriteWidget"
            },
            {
              "type": "null"
            }
          ],
          "description": "Widget to use for write record",
          "default": {
            "type": "ComboBox"
          }
        },
        "record_fields": {
          "description": "Multi-bit binary record fields",
          "allOf": [
            {
              "$ref": "#/definitions/mbbi_mbbo"
            }
          ]
        }
      },
      "required": [
        "name",
        "description"
      ],
      "additionalProperties": false
    },
    "mbbi_mbbo": {
      "type": "object",
      "properties": {
        "NAME": {
          "type": "string",
          "description": "Record Name"
        },
        "DESC": {
          "type": "string",
          "description": "Descriptor"
        },
        "ASG": {
          "type": "string",
          "description": "Access Security Group"
        },
        "SCAN": {
          "description": "Scan Mechanism",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiSCAN"
            }
          ]
        },
        "PINI": {
          "description": "Process at iocInit",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiPINI"
            }
          ]
        },
        "PHAS": {
          "type": "integer",
          "description": "Scan Phase"
        },
        "EVNT": {
          "type": "string",
          "description": "Event Name"
        },
        "TSE": {
          "type": "integer",
          "description": "Time Stamp Event"
        },
        "TSEL": {
          "type": "string",
          "description": "Time Stamp Link"
        },
        "DTYP": {
          "type": "string",
          "description": "Device Type"
        },
        "DISV": {
          "type": "integer",
          "description": "Disable Value"
        },
        "DISA": {
          "type": "integer",
          "description": "Disable"
        },
        "SDIS": {
          "type": "string",
          "description": "Scanning Disable"
        },
        "DISP": {
          "type": "integer",
          "description": "Disable putField"
        },
        "PROC": {
          "type": "integer",
          "description": "Force Processing"
        },
        "STAT": {
          "description": "Alarm Status",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiSTAT"
            }
          ]
        },
        "SEVR": {
          "description": "Alarm Severity",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiSEVR"
            }
          ]
        },
        "AMSG": {
          "type": "string",
          "description": "Alarm Message"
        },
        "NSTA": {
          "description": "New Alarm Status",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiNSTA"
            }
          ]
        },
        "NSEV": {
          "description": "New Alarm Severity",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiNSEV"
            }
          ]
        },
        "NAMSG": {
          "type": "string",
          "description": "New Alarm Message"
        },
        "ACKS": {
          "description": "Alarm Ack Severity",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiACKS"
            }
          ]
        },
        "ACKT": {
          "description": "Alarm Ack Transient",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiACKT"
            }
          ]
        },
        "DISS": {
          "description": "Disable Alarm Sevrty",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiDISS"
            }
          ]
        },
        "LCNT": {
          "type": "integer",
          "description": "Lock Count"
        },
        "PACT": {
          "type": "integer",
          "description": "Record active"
        },
        "PUTF": {
          "type": "integer",
          "description": "dbPutField process"
        },
        "RPRO": {
          "type": "integer",
          "description": "Reprocess "
        },
        "PRIO": {
          "description": "Scheduling Priority",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiPRIO"
            }
          ]
        },
        "TPRO": {
          "type": "integer",
          "description": "Trace Processing"
        },
        "UDF": {
          "type": "integer",
          "description": "Undefined"
        },
        "UDFS": {
          "description": "Undefined Alarm Sevrty",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiUDFS"
            }
          ]
        },
        "UTAG": {
          "type": "integer",
          "description": "Time Tag"
        },
        "FLNK": {
          "type": "string",
          "description": "Forward Process Link"
        },
        "VAL": {
          "type": "string",
          "description": "Current Value"
        },
        "NOBT": {
          "type": "integer",
          "description": "Number of Bits"
        },
        "ZRVL": {
          "type": "integer",
          "description": "Zero Value"
        },
        "ONVL": {
          "type": "integer",
          "description": "One Value"
        },
        "TWVL": {
          "type": "integer",
          "description": "Two Value"
        },
        "THVL": {
          "type": "integer",
          "description": "Three Value"
        },
        "FRVL": {
          "type": "integer",
          "description": "Four Value"
        },
        "FVVL": {
          "type": "integer",
          "description": "Five Value"
        },
        "SXVL": {
          "type": "integer",
          "description": "Six Value"
        },
        "SVVL": {
          "type": "integer",
          "description": "Seven Value"
        },
        "EIVL": {
          "type": "integer",
          "description": "Eight Value"
        },
        "NIVL": {
          "type": "integer",
          "description": "Nine Value"
        },
        "TEVL": {
          "type": "integer",
          "description": "Ten Value"
        },
        "ELVL": {
          "type": "integer",
          "description": "Eleven Value"
        },
        "TVVL": {
          "type": "integer",
          "description": "Twelve Value"
        },
        "TTVL": {
          "type": "integer",
          "description": "Thirteen Value"
        },
        "FTVL": {
          "type": "integer",
          "description": "Fourteen Value"
        },
        "FFVL": {
          "type": "integer",
          "description": "Fifteen Value"
        },
        "ZRST": {
          "type": "string",
          "description": "Zero String"
        },
        "ONST": {
          "type": "string",
          "description": "One String"
        },
        "TWST": {
          "type": "string",
          "description": "Two String"
        },
        "THST": {
          "type": "string",
          "description": "Three String"
        },
        "FRST": {
          "type": "string",
          "description": "Four String"
        },
        "FVST": {
          "type": "string",
          "description": "Five String"
        },
        "SXST": {
          "type": "string",
          "description": "Six String"
        },
        "SVST": {
          "type": "string",
          "description": "Seven String"
        },
        "EIST": {
          "type": "string",
          "description": "Eight String"
        },
        "NIST": {
          "type": "string",
          "description": "Nine String"
        },
        "TEST": {
          "type": "string",
          "description": "Ten String"
        },
        "ELST": {
          "type": "string",
          "description": "Eleven String"
        },
        "TVST": {
          "type": "string",
          "description": "Twelve String"
        },
        "TTST": {
          "type": "string",
          "description": "Thirteen String"
        },
        "FTST": {
          "type": "string",
          "description": "Fourteen String"
        },
        "FFST": {
          "type": "string",
          "description": "Fifteen String"
        },
        "ZRSV": {
          "description": "State Zero Severity",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiZRSV"
            }
          ]
        },
        "ONSV": {
          "description": "State One Severity",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiONSV"
            }
          ]
        },
        "TWSV": {
          "description": "State Two Severity",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiTWSV"
            }
          ]
        },
        "THSV": {
          "description": "State Three Severity",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiTHSV"
            }
          ]
        },
        "FRSV": {
          "description": "State Four Severity",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiFRSV"
            }
          ]
        },
        "FVSV": {
          "description": "State Five Severity",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiFVSV"
            }
          ]
        },
        "SXSV": {
          "description": "State Six Severity",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiSXSV"
            }
          ]
        },
        "SVSV": {
          "description": "State Seven Severity",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiSVSV"
            }
          ]
        },
        "EISV": {
          "description": "State Eight Severity",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiEISV"
            }
          ]
        },
        "NISV": {
          "description": "State Nine Severity",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiNISV"
            }
          ]
        },
        "TESV": {
          "description": "State Ten Severity",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiTESV"
            }
          ]
        },
        "ELSV": {
          "description": "State Eleven Severity",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiELSV"
            }
          ]
        },
        "TVSV": {
          "description": "State Twelve Severity",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiTVSV"
            }
          ]
        },
        "TTSV": {
          "description": "State Thirteen Sevr",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiTTSV"
            }
          ]
        },
        "FTSV": {
          "description": "State Fourteen Sevr",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiFTSV"
            }
          ]
        },
        "FFSV": {
          "description": "State Fifteen Severity",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiFFSV"
            }
          ]
        },
        "UNSV": {
          "description": "Unknown State Severity",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiUNSV"
            }
          ]
        },
        "COSV": {
          "description": "Change of State Svr",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiCOSV"
            }
          ]
        },
        "RVAL": {
          "type": "integer",
          "description": "Raw Value"
        },
        "ORAW": {
          "type": "integer",
          "description": "Prev Raw Value"
        },
        "MASK": {
          "type": "integer",
          "description": "Hardware Mask"
        },
        "MLST": {
          "type": "integer",
          "description": "Last Value Monitored"
        },
        "LALM": {
          "type": "integer",
          "description": "Last Value Alarmed"
        },
        "SDEF": {
          "type": "integer",
          "description": "States Defined"
        },
        "SHFT": {
          "type": "integer",
          "description": "Shift"
        },
        "SIOL": {
          "type": "string",
          "description": "Simulation Input Link"
        },
        "SIML": {
          "type": "string",
          "description": "Simulation Mode Link"
        },
        "SIMM": {
          "description": "Simulation Mode",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiSIMM"
            }
          ]
        },
        "SIMS": {
          "description": "Simulation Mode Severity",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiSIMS"
            }
          ]
        },
        "OLDSIMM": {
          "description": "Prev. Simulation Mode",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiOLDSIMM"
            }
          ]
        },
        "SSCN": {
          "description": "Sim. Mode Scan",
          "allOf": [
            {
              "$ref": "#/definitions/mbbiSSCN"
            }
          ]
        },
        "SDLY": {
          "type": "number",
          "description": "Sim. Mode Async Delay"
        },
        "INP": {
          "type": "string",
          "description": "Input Specification"
        },
        "AFTC": {
          "type": "number",
          "description": "Alarm Filter Time Constant"
        },
        "AFVL": {
          "type": "number",
          "description": "Alarm Filter Value"
        },
        "SVAL": {
          "type": "integer",
          "description": "Simulation Value"
        }
      },
      "additionalProperties": false
    },
    "mbbiSCAN": {
      "type": "string",
      "enum": [
        "Passive",
        "Event",
        "I/O Intr",
        "10 second",
        "5 second",
        "2 second",
        "1 second",
        ".5 second",
        ".2 second",
        ".1 second"
      ]
    },
    "mbbiPINI": {
      "type": "string",
      "enum": [
        "NO",
        "YES",
        "RUN",
        "RUNNING",
        "PAUSE",
        "PAUSED"
      ]
    },
    "mbbiSTAT": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "READ",
        "WRITE",
        "HIHI",
        "HIGH",
        "LOLO",
        "LOW",
        "STATE",
        "COS",
        "COMM",
        "TIMEOUT",
        "HWLIMIT",
        "CALC",
        "SCAN",
        "LINK",
        "SOFT",
        "BAD_SUB",
        "UDF",
        "DISABLE",
        "SIMM",
        "READ_ACCESS",
        "WRITE_ACCESS"
      ]
    },
    "mbbiSEVR": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "mbbiNSTA": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "READ",
        "WRITE",
        "HIHI",
        "HIGH",
        "LOLO",
        "LOW",
        "STATE",
        "COS",
        "COMM",
        "TIMEOUT",
        "HWLIMIT",
        "CALC",
        "SCAN",
        "LINK",
        "SOFT",
        "BAD_SUB",
        "UDF",
        "DISABLE",
        "SIMM",
        "READ_ACCESS",
        "WRITE_ACCESS"
      ]
    },
    "mbbiNSEV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "mbbiACKS": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "mbbiACKT": {
      "type": "string",
      "enum": [
        "NO",
        "YES"
      ]
    },
    "mbbiDISS": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "mbbiPRIO": {
      "type": "string",
      "enum": [
        "LOW",
        "MEDIUM",
        "HIGH"
      ]
    },
    "mbbiUDFS": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "mbbiZRSV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "mbbiONSV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "mbbiTWSV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "mbbiTHSV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "mbbiFRSV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "mbbiFVSV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "mbbiSXSV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "mbbiSVSV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "mbbiEISV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "mbbiNISV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "mbbiTESV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "mbbiELSV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "mbbiTVSV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "mbbiTTSV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "mbbiFTSV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "mbbiFFSV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "mbbiUNSV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "mbbiCOSV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "mbbiSIMM": {
      "type": "string",
      "enum": [
        "NO",
        "YES",
        "RAW"
      ]
    },
    "mbbiSIMS": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "mbbiOLDSIMM": {
      "type": "string",
      "enum": [
        "NO",
        "YES",
        "RAW"
      ]
    },
    "mbbiSSCN": {
      "type": "string",
      "enum": [
        "Passive",
        "Event",
        "I/O Intr",
        "10 second",
        "5 second",
        "2 second",
        "1 second",
        ".5 second",
        ".2 second",
        ".1 second"
      ]
    },
    "AsynString": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "AsynString",
          "default": "AsynString"
        },
        "name": {
          "type": "string",
          "pattern": "([A-Z][a-z0-9]*)*$",
          "description": "PascalCase name to uniquely identify"
        },
        "description": {
          "type": "string",
          "description": "Description of what this Parameter is for"
        },
        "index_name": {
          "type": [
            "string",
            "null"
          ],
          "description": "Override name of index variable in source code (defaults to name)",
          "default": null
        },
        "drv_info": {
          "type": [
            "string",
            "null"
          ],
          "pattern": "^\\S{1,40}$",
          "description": "Info string for drvUserCreate for dynamically created parameters",
          "default": null
        },
        "access": {
          "type": "string",
          "enum": [
            "R",
            "W",
            "RW"
          ],
          "description": "What access does the user have. One of:\n\n    - R: Read only value that cannot be set. E.g. chipTemperature on a detector,\n      or isHomed for a motor\n    - W: Write only value that can be written to, but there is no current value.\n      E.g. reboot on a detector, or overwriteCurrentPosition for a motor\n    - RW: Read and Write value that can be written to and read back.\n      E.g. acquireTime on a detector, or velocity of a motor\n    ",
          "default": "RW"
        },
        "demand_auto_updates": {
          "type": "boolean",
          "description": "Should demand update when readback changes?",
          "default": false
        },
        "read_record_suffix": {
          "type": [
            "string",
            "null"
          ],
          "description": "The read record suffix, if not given then use $(name)_RBV",
          "default": null
        },
        "write_record_suffix": {
          "type": [
            "string",
            "null"
          ],
          "description": "The write record suffix, if not given then use $(name)",
          "default": null
        },
        "display_form": {
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "Default",
            "String",
            "Binary",
            "Decimal",
            "Hex",
            "Exponential",
            "Engineering"
          ],
          "description": "Display form for numeric/array fields",
          "default": null
        },
        "initial": {
          "type": [
            "null",
            "string"
          ],
          "description": "The initial value of the parameter",
          "default": null
        },
        "read_widget": {
          "anyOf": [
            {
              "$ref": "#/definitions/ReadWidget"
            },
            {
              "type": "null"
            }
          ],
          "description": "Widget to use for read record",
          "default": {
            "type": "TextRead",
            "lines": 1
          }
        },
        "write_widget": {
          "anyOf": [
            {
              "$ref": "#/definitions/WriteWidget"
            },
            {
              "type": "null"
            }
          ],
          "description": "Widget to use for write record",
          "default": {
            "type": "TextWrite",
            "lines": 1
          }
        },
        "record_fields": {
          "description": "String record fields",
          "allOf": [
            {
              "$ref": "#/definitions/stringin_stringout"
            }
          ]
        }
      },
      "required": [
        "name",
        "description"
      ],
      "additionalProperties": false
    },
    "stringin_stringout": {
      "type": "object",
      "properties": {
        "NAME": {
          "type": "string",
          "description": "Record Name"
        },
        "DESC": {
          "type": "string",
          "description": "Descriptor"
        },
        "ASG": {
          "type": "string",
          "description": "Access Security Group"
        },
        "SCAN": {
          "description": "Scan Mechanism",
          "allOf": [
            {
              "$ref": "#/definitions/stringinSCAN"
            }
          ]
        },
        "PINI": {
          "description": "Process at iocInit",
          "allOf": [
            {
              "$ref": "#/definitions/stringinPINI"
            }
          ]
        },
        "PHAS": {
          "type": "integer",
          "description": "Scan Phase"
        },
        "EVNT": {
          "type": "string",
          "description": "Event Name"
        },
        "TSE": {
          "type": "integer",
          "description": "Time Stamp Event"
        },
        "TSEL": {
          "type": "string",
          "description": "Time Stamp Link"
        },
        "DTYP": {
          "type": "string",
          "description": "Device Type"
        },
        "DISV": {
          "type": "integer",
          "description": "Disable Value"
        },
        "DISA": {
          "type": "integer",
          "description": "Disable"
        },
        "SDIS": {
          "type": "string",
          "description": "Scanning Disable"
        },
        "DISP": {
          "type": "integer",
          "description": "Disable putField"
        },
        "PROC": {
          "type": "integer",
          "description": "Force Processing"
        },
        "STAT": {
          "description": "Alarm Status",
          "allOf": [
            {
              "$ref": "#/definitions/stringinSTAT"
            }
          ]
        },
        "SEVR": {
          "description": "Alarm Severity",
          "allOf": [
            {
              "$ref": "#/definitions/stringinSEVR"
            }
          ]
        },
        "AMSG": {
          "type": "string",
          "description": "Alarm Message"
        },
        "NSTA": {
          "description": "New Alarm Status",
          "allOf": [
            {
              "$ref": "#/definitions/stringinNSTA"
            }
          ]
        },
        "NSEV": {
          "description": "New Alarm Severity",
          "allOf": [
            {
              "$ref": "#/definitions/stringinNSEV"
            }
          ]
        },
        "NAMSG": {
          "type": "string",
          "description": "New Alarm Message"
        },
        "ACKS": {
          "description": "Alarm Ack Severity",
          "allOf": [
            {
              "$ref": "#/definitions/stringinACKS"
            }
          ]
        },
        "ACKT": {
          "description": "Alarm Ack Transient",
          "allOf": [
            {
              "$ref": "#/definitions/stringinACKT"
            }
          ]
        },
        "DISS": {
          "description": "Disable Alarm Sevrty",
          "allOf": [
            {
              "$ref": "#/definitions/stringinDISS"
            }
          ]
        },
        "LCNT": {
          "type": "integer",
          "description": "Lock Count"
        },
        "PACT": {
          "type": "integer",
          "description": "Record active"
        },
        "PUTF": {
          "type": "integer",
          "description": "dbPutField process"
        },
        "RPRO": {
          "type": "integer",
          "description": "Reprocess "
        },
        "PRIO": {
          "description": "Scheduling Priority",
          "allOf": [
            {
              "$ref": "#/definitions/stringinPRIO"
            }
          ]
        },
        "TPRO": {
          "type": "integer",
          "description": "Trace Processing"
        },
        "UDF": {
          "type": "integer",
          "description": "Undefined"
        },
        "UDFS": {
          "description": "Undefined Alarm Sevrty",
          "allOf": [
            {
              "$ref": "#/definitions/stringinUDFS"
            }
          ]
        },
        "UTAG": {
          "type": "integer",
          "description": "Time Tag"
        },
        "FLNK": {
          "type": "string",
          "description": "Forward Process Link"
        },
        "VAL": {
          "type": "string",
          "description": "Current Value"
        },
        "OVAL": {
          "type": "string",
          "description": "Previous Value"
        },
        "MPST": {
          "description": "Post Value Monitors",
          "allOf": [
            {
              "$ref": "#/definitions/stringinMPST"
            }
          ]
        },
        "APST": {
          "description": "Post Archive Monitors",
          "allOf": [
            {
              "$ref": "#/definitions/stringinAPST"
            }
          ]
        },
        "SIOL": {
          "type": "string",
          "description": "Simulation Input Link"
        },
        "SIML": {
          "type": "string",
          "description": "Simulation Mode Link"
        },
        "SIMM": {
          "description": "Simulation Mode",
          "allOf": [
            {
              "$ref": "#/definitions/stringinSIMM"
            }
          ]
        },
        "SIMS": {
          "description": "Simulation Mode Severity",
          "allOf": [
            {
              "$ref": "#/definitions/stringinSIMS"
            }
          ]
        },
        "OLDSIMM": {
          "description": "Prev. Simulation Mode",
          "allOf": [
            {
              "$ref": "#/definitions/stringinOLDSIMM"
            }
          ]
        },
        "SSCN": {
          "description": "Sim. Mode Scan",
          "allOf": [
            {
              "$ref": "#/definitions/stringinSSCN"
            }
          ]
        },
        "SDLY": {
          "type": "number",
          "description": "Sim. Mode Async Delay"
        },
        "INP": {
          "type": "string",
          "description": "Input Specification"
        },
        "SVAL": {
          "type": "string",
          "description": "Simulation Value"
        }
      },
      "additionalProperties": false
    },
    "stringinSCAN": {
      "type": "string",
      "enum": [
        "Passive",
        "Event",
        "I/O Intr",
        "10 second",
        "5 second",
        "2 second",
        "1 second",
        ".5 second",
        ".2 second",
        ".1 second"
      ]
    },
    "stringinPINI": {
      "type": "string",
      "enum": [
        "NO",
        "YES",
        "RUN",
        "RUNNING",
        "PAUSE",
        "PAUSED"
      ]
    },
    "stringinSTAT": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "READ",
        "WRITE",
        "HIHI",
        "HIGH",
        "LOLO",
        "LOW",
        "STATE",
        "COS",
        "COMM",
        "TIMEOUT",
        "HWLIMIT",
        "CALC",
        "SCAN",
        "LINK",
        "SOFT",
        "BAD_SUB",
        "UDF",
        "DISABLE",
        "SIMM",
        "READ_ACCESS",
        "WRITE_ACCESS"
      ]
    },
    "stringinSEVR": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "stringinNSTA": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "READ",
        "WRITE",
        "HIHI",
        "HIGH",
        "LOLO",
        "LOW",
        "STATE",
        "COS",
        "COMM",
        "TIMEOUT",
        "HWLIMIT",
        "CALC",
        "SCAN",
        "LINK",
        "SOFT",
        "BAD_SUB",
        "UDF",
        "DISABLE",
        "SIMM",
        "READ_ACCESS",
        "WRITE_ACCESS"
      ]
    },
    "stringinNSEV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "stringinACKS": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "stringinACKT": {
      "type": "string",
      "enum": [
        "NO",
        "YES"
      ]
    },
    "stringinDISS": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "stringinPRIO": {
      "type": "string",
      "enum": [
        "LOW",
        "MEDIUM",
        "HIGH"
      ]
    },
    "stringinUDFS": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "stringinMPST": {
      "type": "string",
      "enum": [
        "On Change",
        "Always"
      ]
    },
    "stringinAPST": {
      "type": "string",
      "enum": [
        "On Change",
        "Always"
      ]
    },
    "stringinSIMM": {
      "type": "string",
      "enum": [
        "NO",
        "YES"
      ]
    },
    "stringinSIMS": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "stringinOLDSIMM": {
      "type": "string",
      "enum": [
        "NO",
        "YES",
        "RAW"
      ]
    },
    "stringinSSCN": {
      "type": "string",
      "enum": [
        "Passive",
        "Event",
        "I/O Intr",
        "10 second",
        "5 second",
        "2 second",
        "1 second",
        ".5 second",
        ".2 second",
        ".1 second"
      ]
    },
    "AsynWaveform": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "AsynWaveform",
          "default": "AsynWaveform"
        },
        "name": {
          "type": "string",
          "pattern": "([A-Z][a-z0-9]*)*$",
          "description": "PascalCase name to uniquely identify"
        },
        "description": {
          "type": "string",
          "description": "Description of what this Parameter is for"
        },
        "index_name": {
          "type": [
            "string",
            "null"
          ],
          "description": "Override name of index variable in source code (defaults to name)",
          "default": null
        },
        "drv_info": {
          "type": [
            "string",
            "null"
          ],
          "pattern": "^\\S{1,40}$",
          "description": "Info string for drvUserCreate for dynamically created parameters",
          "default": null
        },
        "access": {
          "type": "string",
          "enum": [
            "R",
            "W",
            "RW"
          ],
          "description": "What access does the user have. One of:\n\n    - R: Read only value that cannot be set. E.g. chipTemperature on a detector,\n      or isHomed for a motor\n    - W: Write only value that can be written to, but there is no current value.\n      E.g. reboot on a detector, or overwriteCurrentPosition for a motor\n    - RW: Read and Write value that can be written to and read back.\n      E.g. acquireTime on a detector, or velocity of a motor\n    ",
          "default": "RW"
        },
        "demand_auto_updates": {
          "type": "boolean",
          "description": "Should demand update when readback changes?",
          "default": false
        },
        "read_record_suffix": {
          "type": [
            "string",
            "null"
          ],
          "description": "The read record suffix, if not given then use $(name)_RBV",
          "default": null
        },
        "write_record_suffix": {
          "type": [
            "string",
            "null"
          ],
          "description": "The write record suffix, if not given then use $(name)",
          "default": null
        },
        "display_form": {
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "Default",
            "String",
            "Binary",
            "Decimal",
            "Hex",
            "Exponential",
            "Engineering"
          ],
          "description": "Display form for numeric/array fields",
          "default": null
        },
        "initial": {
          "default": null
        },
        "read_widget": {
          "anyOf": [
            {
              "$ref": "#/definitions/ReadWidget"
            },
            {
              "type": "null"
            }
          ],
          "description": "Widget to use for read record",
          "default": {
            "type": "TextRead",
            "lines": 1
          }
        },
        "write_widget": {
          "anyOf": [
            {
              "$ref": "#/definitions/WriteWidget"
            },
            {
              "type": "null"
            }
          ],
          "description": "Widget to use for write record",
          "default": {
            "type": "TextWrite",
            "lines": 1
          }
        },
        "record_fields": {
          "description": "Waveform record fields",
          "allOf": [
            {
              "$ref": "#/definitions/waveform_waveform"
            }
          ]
        }
      },
      "required": [
        "name",
        "description"
      ],
      "additionalProperties": false
    },
    "waveform_waveform": {
      "type": "object",
      "properties": {
        "NAME": {
          "type": "string",
          "description": "Record Name"
        },
        "DESC": {
          "type": "string",
          "description": "Descriptor"
        },
        "ASG": {
          "type": "string",
          "description": "Access Security Group"
        },
        "SCAN": {
          "description": "Scan Mechanism",
          "allOf": [
            {
              "$ref": "#/definitions/waveformSCAN"
            }
          ]
        },
        "PINI": {
          "description": "Process at iocInit",
          "allOf": [
            {
              "$ref": "#/definitions/waveformPINI"
            }
          ]
        },
        "PHAS": {
          "type": "integer",
          "description": "Scan Phase"
        },
        "EVNT": {
          "type": "string",
          "description": "Event Name"
        },
        "TSE": {
          "type": "integer",
          "description": "Time Stamp Event"
        },
        "TSEL": {
          "type": "string",
          "description": "Time Stamp Link"
        },
        "DTYP": {
          "type": "string",
          "description": "Device Type"
        },
        "DISV": {
          "type": "integer",
          "description": "Disable Value"
        },
        "DISA": {
          "type": "integer",
          "description": "Disable"
        },
        "SDIS": {
          "type": "string",
          "description": "Scanning Disable"
        },
        "DISP": {
          "type": "integer",
          "description": "Disable putField"
        },
        "PROC": {
          "type": "integer",
          "description": "Force Processing"
        },
        "STAT": {
          "description": "Alarm Status",
          "allOf": [
            {
              "$ref": "#/definitions/waveformSTAT"
            }
          ]
        },
        "SEVR": {
          "description": "Alarm Severity",
          "allOf": [
            {
              "$ref": "#/definitions/waveformSEVR"
            }
          ]
        },
        "AMSG": {
          "type": "string",
          "description": "Alarm Message"
        },
        "NSTA": {
          "description": "New Alarm Status",
          "allOf": [
            {
              "$ref": "#/definitions/waveformNSTA"
            }
          ]
        },
        "NSEV": {
          "description": "New Alarm Severity",
          "allOf": [
            {
              "$ref": "#/definitions/waveformNSEV"
            }
          ]
        },
        "NAMSG": {
          "type": "string",
          "description": "New Alarm Message"
        },
        "ACKS": {
          "description": "Alarm Ack Severity",
          "allOf": [
            {
              "$ref": "#/definitions/waveformACKS"
            }
          ]
        },
        "ACKT": {
          "description": "Alarm Ack Transient",
          "allOf": [
            {
              "$ref": "#/definitions/waveformACKT"
            }
          ]
        },
        "DISS": {
          "description": "Disable Alarm Sevrty",
          "allOf": [
            {
              "$ref": "#/definitions/waveformDISS"
            }
          ]
        },
        "LCNT": {
          "type": "integer",
          "description": "Lock Count"
        },
        "PACT": {
          "type": "integer",
          "description": "Record active"
        },
        "PUTF": {
          "type": "integer",
          "description": "dbPutField process"
        },
        "RPRO": {
          "type": "integer",
          "description": "Reprocess "
        },
        "PRIO": {
          "description": "Scheduling Priority",
          "allOf": [
            {
              "$ref": "#/definitions/waveformPRIO"
            }
          ]
        },
        "TPRO": {
          "type": "integer",
          "description": "Trace Processing"
        },
        "UDF": {
          "type": "integer",
          "description": "Undefined"
        },
        "UDFS": {
          "description": "Undefined Alarm Sevrty",
          "allOf": [
            {
              "$ref": "#/definitions/waveformUDFS"
            }
          ]
        },
        "UTAG": {
          "type": "integer",
          "description": "Time Tag"
        },
        "FLNK": {
          "type": "string",
          "description": "Forward Process Link"
        },
        "RARM": {
          "type": "integer",
          "description": "Rearm the waveform"
        },
        "PREC": {
          "type": "integer",
          "description": "Display Precision"
        },
        "INP": {
          "type": "string",
          "description": "Input Specification"
        },
        "EGU": {
          "type": "string",
          "description": "Engineering Units"
        },
        "HOPR": {
          "type": "number",
          "description": "High Operating Range"
        },
        "LOPR": {
          "type": "number",
          "description": "Low Operating Range"
        },
        "NELM": {
          "type": "integer",
          "description": "Number of Elements"
        },
        "FTVL": {
          "description": "Field Type of Value",
          "allOf": [
            {
              "$ref": "#/definitions/waveformFTVL"
            }
          ]
        },
        "BUSY": {
          "type": "integer",
          "description": "Busy Indicator"
        },
        "NORD": {
          "type": "integer",
          "description": "Number elements read"
        },
        "SIOL": {
          "type": "string",
          "description": "Simulation Input Link"
        },
        "SIML": {
          "type": "string",
          "description": "Simulation Mode Link"
        },
        "SIMM": {
          "description": "Simulation Mode",
          "allOf": [
            {
              "$ref": "#/definitions/waveformSIMM"
            }
          ]
        },
        "SIMS": {
          "description": "Simulation Mode Severity",
          "allOf": [
            {
              "$ref": "#/definitions/waveformSIMS"
            }
          ]
        },
        "OLDSIMM": {
          "description": "Prev. Simulation Mode",
          "allOf": [
            {
              "$ref": "#/definitions/waveformOLDSIMM"
            }
          ]
        },
        "SSCN": {
          "description": "Sim. Mode Scan",
          "allOf": [
            {
              "$ref": "#/definitions/waveformSSCN"
            }
          ]
        },
        "SDLY": {
          "type": "number",
          "description": "Sim. Mode Async Delay"
        },
        "MPST": {
          "description": "Post Value Monitors",
          "allOf": [
            {
              "$ref": "#/definitions/waveformMPST"
            }
          ]
        },
        "APST": {
          "description": "Post Archive Monitors",
          "allOf": [
            {
              "$ref": "#/definitions/waveformAPST"
            }
          ]
        },
        "HASH": {
          "type": "integer",
          "description": "Hash of OnChange data."
        }
      },
      "additionalProperties": false
    },
    "waveformSCAN": {
      "type": "string",
      "enum": [
        "Passive",
        "Event",
        "I/O Intr",
        "10 second",
        "5 second",
        "2 second",
        "1 second",
        ".5 second",
        ".2 second",
        ".1 second"
      ]
    },
    "waveformPINI": {
      "type": "string",
      "enum": [
        "NO",
        "YES",
        "RUN",
        "RUNNING",
        "PAUSE",
        "PAUSED"
      ]
    },
    "waveformSTAT": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "READ",
        "WRITE",
        "HIHI",
        "HIGH",
        "LOLO",
        "LOW",
        "STATE",
        "COS",
        "COMM",
        "TIMEOUT",
        "HWLIMIT",
        "CALC",
        "SCAN",
        "LINK",
        "SOFT",
        "BAD_SUB",
        "UDF",
        "DISABLE",
        "SIMM",
        "READ_ACCESS",
        "WRITE_ACCESS"
      ]
    },
    "waveformSEVR": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "waveformNSTA": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "READ",
        "WRITE",
        "HIHI",
        "HIGH",
        "LOLO",
        "LOW",
        "STATE",
        "COS",
        "COMM",
        "TIMEOUT",
        "HWLIMIT",
        "CALC",
        "SCAN",
        "LINK",
        "SOFT",
        "BAD_SUB",
        "UDF",
        "DISABLE",
        "SIMM",
        "READ_ACCESS",
        "WRITE_ACCESS"
      ]
    },
    "waveformNSEV": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "waveformACKS": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "waveformACKT": {
      "type": "string",
      "enum": [
        "NO",
        "YES"
      ]
    },
    "waveformDISS": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "waveformPRIO": {
      "type": "string",
      "enum": [
        "LOW",
        "MEDIUM",
        "HIGH"
      ]
    },
    "waveformUDFS": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "waveformFTVL": {
      "type": "string",
      "enum": [
        "STRING",
        "CHAR",
        "UCHAR",
        "SHORT",
        "USHORT",
        "LONG",
        "ULONG",
        "INT64",
        "UINT64",
        "FLOAT",
        "DOUBLE",
        "ENUM"
      ]
    },
    "waveformSIMM": {
      "type": "string",
      "enum": [
        "NO",
        "YES"
      ]
    },
    "waveformSIMS": {
      "type": "string",
      "enum": [
        "NO_ALARM",
        "MINOR",
        "MAJOR",
        "INVALID"
      ]
    },
    "waveformOLDSIMM": {
      "type": "string",
      "enum": [
        "NO",
        "YES",
        "RAW"
      ]
    },
    "waveformSSCN": {
      "type": "string",
      "enum": [
        "Passive",
        "Event",
        "I/O Intr",
        "10 second",
        "5 second",
        "2 second",
        "1 second",
        ".5 second",
        ".2 second",
        ".1 second"
      ]
    },
    "waveformMPST": {
      "type": "string",
      "enum": [
        "Always",
        "On Change"
      ]
    },
    "waveformAPST": {
      "type": "string",
      "enum": [
        "Always",
        "On Change"
      ]
    },
    "AsynParameterGroup": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "Group",
          "default": "Group"
        },
        "name": {
          "type": "string",
          "pattern": "([A-Z][a-z0-9]*)*$",
          "description": "PascalCase name to uniquely identify"
        },
        "layout": {
          "description": "How to layout children on screen",
          "allOf": [
            {
              "$ref": "#/definitions/Layout"
            }
          ]
        },
        "children": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/AsynParameter"
              },
              {
                "$ref": "#/definitions/AsynParameterGroup"
              }
            ]
          },
          "description": "Child Components"
        }
      },
      "required": [
        "name",
        "layout",
        "children"
      ],
      "additionalProperties": false
    },
    "Layout": {
      "anyOf": [
        {
          "$ref": "#/definitions/Plot"
        },
        {
          "$ref": "#/definitions/Row"
        },
        {
          "$ref": "#/definitions/Grid"
        }
      ]
    },
    "Plot": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "Plot",
          "default": "Plot"
        }
      },
      "additionalProperties": false
    },
    "Row": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "Row",
          "default": "Row"
        },
        "header": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          },
          "description": "Labels for the items in the row, None means use previous row header",
          "default": null
        }
      },
      "additionalProperties": false
    },
    "Grid": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "Grid",
          "default": "Grid"
        },
        "labelled": {
          "type": "boolean",
          "description": "If True use names of children as labels",
          "default": true
        }
      },
      "additionalProperties": false
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}