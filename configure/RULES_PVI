-include $(PVI)/configure/CONFIG_SITE

# Note in these rules, we create the target in-source and then copy it to the build
# target. This is so that the resulting changes can be commited and used in builds
# without PVI available `$(@F)` is the file-within-directory part of the file name of
# the target, so `../$(@F)` is the source location of the file we want to generate
# See: https://www.gnu.org/software/make/manual/html_node/Automatic-Variables.html

EMPTY :=
SPACE := $(EMPTY) $(EMPTY)
ifdef PVI_YAML_PATHS
# Prepend each path in PVI_YAML_PATHS with ' --yaml-paths ' to pass to pvi call
# e.g. `PVI_YAML_PATHS=foo bar` -> `... --yaml-paths foo --yaml-paths bar`
EXPAND_PVI_YAML_PATHS = $(subst $(SPACE), --yaml-paths , $(PVI_YAML_PATHS))
endif

ifdef BIN_PVI

# Rules

## Rule to create a Parameters template
%Parameters.template: $(TOP)/pvi/%.pvi.producer.yaml
	$(BIN_PVI) produce ../$(@F) $<
	cp ../$(@F) $@

## Rule to create a ParamSet header
%ParamSet.h: $(TOP)/pvi/%.pvi.producer.yaml
	$(BIN_PVI) produce ../$(@F) $<
	cp ../$(@F) $@

## Rule to create an adl UI
$(PVI_ADLS)/%.adl: $(TOP)/pvi/%.pvi.producer.yaml
	$(BIN_PVI) format $@ $< $(PVI)/tests/produce_format/input/aps.pvi.formatter.yaml $(EXPAND_PVI_YAML_PATHS)

## Rule to create an edl UI
$(PVI_EDLS)/%.edl: $(TOP)/pvi/%.pvi.producer.yaml
	$(BIN_PVI) format $@ $< $(PVI)/tests/produce_format/input/dls.edl.pvi.formatter.yaml $(EXPAND_PVI_YAML_PATHS)

## Rule to create a bob UI
$(PVI_BOBS)/%.bob: $(TOP)/pvi/%.pvi.producer.yaml
	$(BIN_PVI) format $@ $< $(PVI)/tests/produce_format/input/dls.bob.pvi.formatter.yaml $(EXPAND_PVI_YAML_PATHS)

# Generate UIs

## Find base names of components from YAML files
PVIS := $(wildcard $(TOP)/pvi/*.pvi.producer.yaml)
COMPONENTS := $(patsubst $(TOP)/pvi/%.pvi.producer.yaml, %, $(PVIS))

ifdef PVI_ADLS

## Generate an adl for every yaml
ADLS := $(patsubst %, $(PVI_ADLS)/%.adl, $(COMPONENTS))
install: $(PVI_ADLS) $(ADLS)

$(PVI_ADLS):
	mkdir -p $@

endif # PVI_ADLS

ifdef PVI_EDLS

## Generate an edl for every yaml
EDLS := $(patsubst %, $(PVI_EDLS)/%.edl, $(COMPONENTS))
install:  $(PVI_EDLS) $(EDLS)

$(PVI_EDLS):
	mkdir -p $@

endif # PVI_EDLS

ifdef PVI_BOBS

## Generate a bob for every yaml
BOBS := $(patsubst %, $(PVI_BOBS)/%.bob, $(COMPONENTS))
install: $(PVI_BOBS) $(BOBS)

$(PVI_BOBS):
	mkdir -p $@

endif # PVI_BOBS

endif # BIN_PVI
